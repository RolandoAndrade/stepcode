// Generated from src/StepCode.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class StepCodeLexer extends Lexer {
	public static readonly AND = 1;
	public static readonly ARRAY = 2;
	public static readonly BEGIN = 3;
	public static readonly BOOLEAN = 4;
	public static readonly ENDCASE = 5;
	public static readonly CASE = 6;
	public static readonly CHAR = 7;
	public static readonly CHR = 8;
	public static readonly CONST = 9;
	public static readonly DIV = 10;
	public static readonly DO = 11;
	public static readonly DOWNTO = 12;
	public static readonly ELIF = 13;
	public static readonly ELSE = 14;
	public static readonly OTHERWISE = 15;
	public static readonly END = 16;
	public static readonly FILE = 17;
	public static readonly WITHSTEP = 18;
	public static readonly ENDFOR = 19;
	public static readonly FOR = 20;
	public static readonly BYVALUE = 21;
	public static readonly BYREFERENCE = 22;
	public static readonly ENDFUNCTION = 23;
	public static readonly FUNCTION = 24;
	public static readonly GOTO = 25;
	public static readonly ENDIF = 26;
	public static readonly IF = 27;
	public static readonly IN = 28;
	public static readonly VOID = 29;
	public static readonly INTEGER = 30;
	public static readonly LABEL = 31;
	public static readonly DIMENSION = 32;
	public static readonly MOD = 33;
	public static readonly NIL = 34;
	public static readonly NOT = 35;
	public static readonly OF = 36;
	public static readonly HACER = 37;
	public static readonly OR = 38;
	public static readonly PACKED = 39;
	public static readonly ENDPROCEDURE = 40;
	public static readonly PROCEDURE = 41;
	public static readonly PROGRAM = 42;
	public static readonly ENDPROGRAM = 43;
	public static readonly BREAK = 44;
	public static readonly CONTINUE = 45;
	public static readonly RETURN = 46;
	public static readonly REAL = 47;
	public static readonly RECORD = 48;
	public static readonly REPEAT = 49;
	public static readonly SET = 50;
	public static readonly THEN = 51;
	public static readonly UNTIL = 52;
	public static readonly TO = 53;
	public static readonly TYPE = 54;
	public static readonly DEFINE = 55;
	public static readonly ENDWHILE = 56;
	public static readonly MIENTRASQUE = 57;
	public static readonly WHILE = 58;
	public static readonly WITH = 59;
	public static readonly PLUS = 60;
	public static readonly MINUS = 61;
	public static readonly POWER = 62;
	public static readonly STAR = 63;
	public static readonly SLASH = 64;
	public static readonly ASSIGN = 65;
	public static readonly COMMA = 66;
	public static readonly SEMI = 67;
	public static readonly COLON = 68;
	public static readonly EQUAL = 69;
	public static readonly NOT_EQUAL = 70;
	public static readonly LT = 71;
	public static readonly LE = 72;
	public static readonly GE = 73;
	public static readonly GT = 74;
	public static readonly LPAREN = 75;
	public static readonly RPAREN = 76;
	public static readonly LBRACK = 77;
	public static readonly LBRACK2 = 78;
	public static readonly RBRACK = 79;
	public static readonly RBRACK2 = 80;
	public static readonly POINTER = 81;
	public static readonly AT = 82;
	public static readonly DOT = 83;
	public static readonly DOTDOT = 84;
	public static readonly LCURLY = 85;
	public static readonly RCURLY = 86;
	public static readonly AS = 87;
	public static readonly UNIT = 88;
	public static readonly INTERFACE = 89;
	public static readonly USES = 90;
	public static readonly STRING = 91;
	public static readonly IMPLEMENTATION = 92;
	public static readonly TRUE = 93;
	public static readonly FALSE = 94;
	public static readonly WRITE = 95;
	public static readonly READ = 96;
	public static readonly WS = 97;
	public static readonly COMMENT_1 = 98;
	public static readonly COMMENT_2 = 99;
	public static readonly IDENT = 100;
	public static readonly STRING_LITERAL = 101;
	public static readonly NUM_INT = 102;
	public static readonly NUM_REAL = 103;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, null, 
                                                            "'ARRAY'", "'BEGIN'", 
                                                            null, null, 
                                                            null, null, 
                                                            "'CHR'", "'CONST'", 
                                                            "'DIV'", "'DO'", 
                                                            "'DOWNTO'", 
                                                            null, null, 
                                                            null, "'END'", 
                                                            "'FILE'", null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            "'GOTO'", null, 
                                                            null, "'IN'", 
                                                            null, null, 
                                                            "'LABEL'", "'DIMENSION'", 
                                                            "'MOD'", "'NIL'", 
                                                            null, "'OF'", 
                                                            "'HACER'", null, 
                                                            "'PACKED'", 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, "'REAL'", 
                                                            "'RECORD'", 
                                                            null, "'SET'", 
                                                            null, null, 
                                                            null, "'TYPE'", 
                                                            null, null, 
                                                            "'MIENTRAS QUE'", 
                                                            null, "'WITH'", 
                                                            "'+'", "'-'", 
                                                            null, "'*'", 
                                                            "'/'", null, 
                                                            "','", "';'", 
                                                            "':'", "'='", 
                                                            null, "'<'", 
                                                            null, null, 
                                                            "'>'", "'('", 
                                                            "')'", "'['", 
                                                            "'(.'", "']'", 
                                                            "'.)'", "'^^'", 
                                                            "'@'", "'.'", 
                                                            "'..'", "'{'", 
                                                            "'}'", "'COMO'", 
                                                            "'UNIT'", "'INTERFACE'", 
                                                            "'USES'", null, 
                                                            "'IMPLEMENTATION'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "AND", 
                                                             "ARRAY", "BEGIN", 
                                                             "BOOLEAN", 
                                                             "ENDCASE", 
                                                             "CASE", "CHAR", 
                                                             "CHR", "CONST", 
                                                             "DIV", "DO", 
                                                             "DOWNTO", "ELIF", 
                                                             "ELSE", "OTHERWISE", 
                                                             "END", "FILE", 
                                                             "WITHSTEP", 
                                                             "ENDFOR", "FOR", 
                                                             "BYVALUE", 
                                                             "BYREFERENCE", 
                                                             "ENDFUNCTION", 
                                                             "FUNCTION", 
                                                             "GOTO", "ENDIF", 
                                                             "IF", "IN", 
                                                             "VOID", "INTEGER", 
                                                             "LABEL", "DIMENSION", 
                                                             "MOD", "NIL", 
                                                             "NOT", "OF", 
                                                             "HACER", "OR", 
                                                             "PACKED", "ENDPROCEDURE", 
                                                             "PROCEDURE", 
                                                             "PROGRAM", 
                                                             "ENDPROGRAM", 
                                                             "BREAK", "CONTINUE", 
                                                             "RETURN", "REAL", 
                                                             "RECORD", "REPEAT", 
                                                             "SET", "THEN", 
                                                             "UNTIL", "TO", 
                                                             "TYPE", "DEFINE", 
                                                             "ENDWHILE", 
                                                             "MIENTRASQUE", 
                                                             "WHILE", "WITH", 
                                                             "PLUS", "MINUS", 
                                                             "POWER", "STAR", 
                                                             "SLASH", "ASSIGN", 
                                                             "COMMA", "SEMI", 
                                                             "COLON", "EQUAL", 
                                                             "NOT_EQUAL", 
                                                             "LT", "LE", 
                                                             "GE", "GT", 
                                                             "LPAREN", "RPAREN", 
                                                             "LBRACK", "LBRACK2", 
                                                             "RBRACK", "RBRACK2", 
                                                             "POINTER", 
                                                             "AT", "DOT", 
                                                             "DOTDOT", "LCURLY", 
                                                             "RCURLY", "AS", 
                                                             "UNIT", "INTERFACE", 
                                                             "USES", "STRING", 
                                                             "IMPLEMENTATION", 
                                                             "TRUE", "FALSE", 
                                                             "WRITE", "READ", 
                                                             "WS", "COMMENT_1", 
                                                             "COMMENT_2", 
                                                             "IDENT", "STRING_LITERAL", 
                                                             "NUM_INT", 
                                                             "NUM_REAL" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"AND", "ARRAY", "BEGIN", "BOOLEAN", "ENDCASE", "CASE", "CHAR", "CHR", 
		"CONST", "DIV", "DO", "DOWNTO", "ELIF", "ELSE", "OTHERWISE", "END", "FILE", 
		"WITHSTEP", "ENDFOR", "FOR", "BYVALUE", "BYREFERENCE", "ENDFUNCTION", 
		"FUNCTION", "GOTO", "ENDIF", "IF", "IN", "VOID", "INTEGER", "LABEL", "DIMENSION", 
		"MOD", "NIL", "NOT", "OF", "HACER", "OR", "PACKED", "ENDPROCEDURE", "PROCEDURE", 
		"PROGRAM", "ENDPROGRAM", "BREAK", "CONTINUE", "RETURN", "REAL", "RECORD", 
		"REPEAT", "SET", "THEN", "UNTIL", "TO", "TYPE", "DEFINE", "ENDWHILE", 
		"MIENTRASQUE", "WHILE", "WITH", "PLUS", "MINUS", "POWER", "STAR", "SLASH", 
		"ASSIGN", "COMMA", "SEMI", "COLON", "EQUAL", "NOT_EQUAL", "LT", "LE", 
		"GE", "GT", "LPAREN", "RPAREN", "LBRACK", "LBRACK2", "RBRACK", "RBRACK2", 
		"POINTER", "AT", "DOT", "DOTDOT", "LCURLY", "RCURLY", "AS", "UNIT", "INTERFACE", 
		"USES", "STRING", "IMPLEMENTATION", "TRUE", "FALSE", "WRITE", "READ", 
		"WS", "COMMENT_1", "COMMENT_2", "IDENT", "STRING_LITERAL", "NUM_INT", 
		"NUM_REAL", "EXPONENT",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, StepCodeLexer._ATN, StepCodeLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "StepCode.g4"; }

	public get literalNames(): (string | null)[] { return StepCodeLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return StepCodeLexer.symbolicNames; }
	public get ruleNames(): string[] { return StepCodeLexer.ruleNames; }

	public get serializedATN(): number[] { return StepCodeLexer._serializedATN; }

	public get channelNames(): string[] { return StepCodeLexer.channelNames; }

	public get modeNames(): string[] { return StepCodeLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,103,1249,6,-1,2,
	0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,
	9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,
	7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,
	23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,
	2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,
	38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
	7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,
	52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,
	2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,
	67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,
	7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,
	81,2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,
	2,89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,
	96,7,96,2,97,7,97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,
	2,103,7,103,1,0,1,0,1,0,1,0,3,0,214,8,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,
	1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
	1,3,1,3,1,3,1,3,1,3,1,3,3,3,248,8,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
	1,4,1,4,1,4,1,4,1,4,1,4,3,4,265,8,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
	3,5,276,8,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,290,8,6,
	1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,
	1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,
	12,1,12,1,12,1,12,3,12,327,8,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
	3,13,337,8,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,
	14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,3,14,360,8,14,1,15,1,15,
	1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,
	17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,3,17,388,8,17,1,18,1,18,
	1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,3,18,403,8,18,1,
	19,1,19,1,19,1,19,1,19,1,19,1,19,3,19,412,8,19,1,20,1,20,1,20,1,20,1,20,
	1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,
	20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,440,8,20,1,21,1,21,1,21,1,21,1,21,
	1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
	21,1,21,1,21,1,21,1,21,1,21,1,21,3,21,468,8,21,1,22,1,22,1,22,1,22,1,22,
	1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,
	22,1,22,3,22,491,8,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
	1,23,1,23,1,23,1,23,1,23,3,23,508,8,23,1,24,1,24,1,24,1,24,1,24,1,25,1,
	25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,25,525,8,25,1,26,1,26,1,26,
	1,26,3,26,531,8,26,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,
	28,1,28,3,28,545,8,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,
	1,29,1,29,1,29,3,29,560,8,29,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,
	31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,
	1,33,1,34,1,34,1,34,1,34,1,34,3,34,591,8,34,1,35,1,35,1,35,1,36,1,36,1,
	36,1,36,1,36,1,36,1,37,1,37,1,37,3,37,605,8,37,1,38,1,38,1,38,1,38,1,38,
	1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,
	39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
	1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,
	39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
	3,39,670,8,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,
	40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,
	1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,
	40,1,40,1,40,1,40,3,40,716,8,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
	1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,
	41,3,41,741,8,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,
	1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,
	42,1,42,1,42,1,42,1,42,1,42,1,42,3,42,775,8,42,1,43,1,43,1,43,1,43,1,43,
	1,43,1,43,1,43,1,43,1,43,1,43,3,43,788,8,43,1,44,1,44,1,44,1,44,1,44,1,
	44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,3,44,807,8,44,
	1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,
	45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,3,45,831,8,45,1,46,1,46,1,46,1,46,
	1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,
	48,1,48,1,48,1,48,1,48,1,48,1,48,3,48,858,8,48,1,49,1,49,1,49,1,49,1,50,
	1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,3,50,876,8,50,1,
	51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,3,51,
	892,8,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,3,52,901,8,52,1,53,1,53,1,53,
	1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,3,54,918,8,
	54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,
	1,55,1,55,1,55,1,55,1,55,3,55,939,8,55,1,56,1,56,1,56,1,56,1,56,1,56,1,
	56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,
	1,57,1,57,1,57,1,57,1,57,3,57,967,8,57,1,58,1,58,1,58,1,58,1,58,1,59,1,
	59,1,60,1,60,1,61,1,61,1,61,3,61,981,8,61,1,62,1,62,1,63,1,63,1,64,1,64,
	1,64,1,64,1,64,3,64,992,8,64,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,
	69,1,69,1,69,1,69,1,69,3,69,1007,8,69,1,70,1,70,1,71,1,71,1,71,3,71,1014,
	8,71,1,72,1,72,1,72,3,72,1019,8,72,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,
	76,1,77,1,77,1,77,1,78,1,78,1,79,1,79,1,79,1,80,1,80,1,80,1,81,1,81,1,82,
	1,82,1,83,1,83,1,83,1,84,1,84,1,85,1,85,1,86,1,86,1,86,1,86,1,86,1,87,1,
	87,1,87,1,87,1,87,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,89,
	1,89,1,89,1,89,1,89,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,
	90,1,90,3,90,1088,8,90,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,
	1,91,1,91,1,91,1,91,1,91,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,
	92,1,92,1,92,1,92,3,92,1118,8,92,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,
	1,93,1,93,3,93,1130,8,93,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,
	94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,3,94,1152,8,94,1,95,
	1,95,1,95,1,95,1,95,1,95,1,95,1,95,3,95,1162,8,95,1,96,1,96,1,96,1,96,1,
	97,1,97,1,97,1,97,5,97,1172,8,97,10,97,12,97,1175,9,97,1,97,1,97,1,98,1,
	98,5,98,1181,8,98,10,98,12,98,1184,9,98,1,98,1,98,1,99,1,99,5,99,1190,8,
	99,10,99,12,99,1193,9,99,1,100,1,100,1,100,1,100,5,100,1199,8,100,10,100,
	12,100,1202,9,100,1,100,1,100,1,100,1,100,1,100,5,100,1209,8,100,10,100,
	12,100,1212,9,100,1,100,3,100,1215,8,100,1,101,4,101,1218,8,101,11,101,
	12,101,1219,1,102,4,102,1223,8,102,11,102,12,102,1224,1,102,1,102,4,102,
	1229,8,102,11,102,12,102,1230,1,102,3,102,1234,8,102,3,102,1236,8,102,1,
	102,3,102,1239,8,102,1,103,1,103,3,103,1243,8,103,1,103,4,103,1246,8,103,
	11,103,12,103,1247,0,0,104,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
	21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,
	45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,
	69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,
	93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,
	115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,
	68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,
	157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,88,177,
	89,179,90,181,91,183,92,185,93,187,94,189,95,191,96,193,97,195,98,197,99,
	199,100,201,101,203,102,205,103,207,0,1,0,31,2,0,65,65,97,97,2,0,78,78,
	110,110,2,0,68,68,100,100,2,0,89,89,121,121,2,0,82,82,114,114,2,0,66,66,
	98,98,2,0,69,69,101,101,2,0,71,71,103,103,2,0,73,73,105,105,2,0,79,79,111,
	111,2,0,76,76,108,108,2,0,67,67,99,99,2,0,195,195,227,227,2,0,83,83,115,
	115,2,0,70,70,102,102,2,0,85,85,117,117,2,0,84,84,116,116,2,0,72,72,104,
	104,2,0,86,86,118,118,2,0,87,87,119,119,2,0,77,77,109,109,2,0,80,80,112,
	112,2,0,75,75,107,107,2,0,81,81,113,113,3,0,9,10,13,13,32,32,2,0,10,10,
	13,13,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,122,1,0,39,39,1,0,34,34,
	2,0,43,43,45,45,1320,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
	9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,
	0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,
	31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,
	0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,
	53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,
	0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,
	75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,
	0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,
	97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,
	1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,
	0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,
	0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,
	0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,
	0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,
	159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,
	1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,
	0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,
	0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,
	0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,1,213,1,0,0,0,3,215,1,0,0,0,
	5,221,1,0,0,0,7,247,1,0,0,0,9,264,1,0,0,0,11,275,1,0,0,0,13,289,1,0,0,0,
	15,291,1,0,0,0,17,295,1,0,0,0,19,301,1,0,0,0,21,305,1,0,0,0,23,308,1,0,
	0,0,25,326,1,0,0,0,27,336,1,0,0,0,29,359,1,0,0,0,31,361,1,0,0,0,33,365,
	1,0,0,0,35,387,1,0,0,0,37,402,1,0,0,0,39,411,1,0,0,0,41,439,1,0,0,0,43,
	467,1,0,0,0,45,490,1,0,0,0,47,507,1,0,0,0,49,509,1,0,0,0,51,524,1,0,0,0,
	53,530,1,0,0,0,55,532,1,0,0,0,57,544,1,0,0,0,59,559,1,0,0,0,61,561,1,0,
	0,0,63,567,1,0,0,0,65,577,1,0,0,0,67,581,1,0,0,0,69,590,1,0,0,0,71,592,
	1,0,0,0,73,595,1,0,0,0,75,604,1,0,0,0,77,606,1,0,0,0,79,669,1,0,0,0,81,
	715,1,0,0,0,83,740,1,0,0,0,85,774,1,0,0,0,87,787,1,0,0,0,89,806,1,0,0,0,
	91,830,1,0,0,0,93,832,1,0,0,0,95,837,1,0,0,0,97,857,1,0,0,0,99,859,1,0,
	0,0,101,875,1,0,0,0,103,891,1,0,0,0,105,900,1,0,0,0,107,902,1,0,0,0,109,
	917,1,0,0,0,111,938,1,0,0,0,113,940,1,0,0,0,115,966,1,0,0,0,117,968,1,0,
	0,0,119,973,1,0,0,0,121,975,1,0,0,0,123,980,1,0,0,0,125,982,1,0,0,0,127,
	984,1,0,0,0,129,991,1,0,0,0,131,993,1,0,0,0,133,995,1,0,0,0,135,997,1,0,
	0,0,137,999,1,0,0,0,139,1006,1,0,0,0,141,1008,1,0,0,0,143,1013,1,0,0,0,
	145,1018,1,0,0,0,147,1020,1,0,0,0,149,1022,1,0,0,0,151,1024,1,0,0,0,153,
	1026,1,0,0,0,155,1028,1,0,0,0,157,1031,1,0,0,0,159,1033,1,0,0,0,161,1036,
	1,0,0,0,163,1039,1,0,0,0,165,1041,1,0,0,0,167,1043,1,0,0,0,169,1046,1,0,
	0,0,171,1048,1,0,0,0,173,1050,1,0,0,0,175,1055,1,0,0,0,177,1060,1,0,0,0,
	179,1070,1,0,0,0,181,1087,1,0,0,0,183,1089,1,0,0,0,185,1117,1,0,0,0,187,
	1129,1,0,0,0,189,1151,1,0,0,0,191,1161,1,0,0,0,193,1163,1,0,0,0,195,1167,
	1,0,0,0,197,1178,1,0,0,0,199,1187,1,0,0,0,201,1214,1,0,0,0,203,1217,1,0,
	0,0,205,1222,1,0,0,0,207,1240,1,0,0,0,209,210,7,0,0,0,210,211,7,1,0,0,211,
	214,7,2,0,0,212,214,7,3,0,0,213,209,1,0,0,0,213,212,1,0,0,0,214,2,1,0,0,
	0,215,216,7,0,0,0,216,217,7,4,0,0,217,218,7,4,0,0,218,219,7,0,0,0,219,220,
	7,3,0,0,220,4,1,0,0,0,221,222,7,5,0,0,222,223,7,6,0,0,223,224,7,7,0,0,224,
	225,7,8,0,0,225,226,7,1,0,0,226,6,1,0,0,0,227,228,7,5,0,0,228,229,7,9,0,
	0,229,230,7,9,0,0,230,231,7,10,0,0,231,232,7,6,0,0,232,233,7,0,0,0,233,
	248,7,1,0,0,234,235,7,10,0,0,235,236,7,9,0,0,236,237,7,7,0,0,237,238,7,
	8,0,0,238,239,7,11,0,0,239,248,7,9,0,0,240,241,7,10,0,0,241,242,7,12,0,
	0,242,243,5,8220,0,0,243,244,7,7,0,0,244,245,7,8,0,0,245,246,7,11,0,0,246,
	248,7,9,0,0,247,227,1,0,0,0,247,234,1,0,0,0,247,240,1,0,0,0,248,8,1,0,0,
	0,249,250,7,6,0,0,250,251,7,1,0,0,251,252,7,2,0,0,252,253,7,11,0,0,253,
	254,7,0,0,0,254,255,7,13,0,0,255,265,7,6,0,0,256,257,7,14,0,0,257,258,7,
	8,0,0,258,259,7,1,0,0,259,260,7,13,0,0,260,261,7,6,0,0,261,262,7,7,0,0,
	262,263,7,15,0,0,263,265,7,1,0,0,264,249,1,0,0,0,264,256,1,0,0,0,265,10,
	1,0,0,0,266,267,7,13,0,0,267,268,7,6,0,0,268,269,7,7,0,0,269,270,7,15,0,
	0,270,276,7,1,0,0,271,272,7,11,0,0,272,273,7,0,0,0,273,274,7,13,0,0,274,
	276,7,6,0,0,275,266,1,0,0,0,275,271,1,0,0,0,276,12,1,0,0,0,277,278,7,11,
	0,0,278,279,7,0,0,0,279,280,7,4,0,0,280,281,7,0,0,0,281,282,7,11,0,0,282,
	283,7,16,0,0,283,284,7,6,0,0,284,290,7,4,0,0,285,286,7,11,0,0,286,287,7,
	17,0,0,287,288,7,0,0,0,288,290,7,4,0,0,289,277,1,0,0,0,289,285,1,0,0,0,
	290,14,1,0,0,0,291,292,7,11,0,0,292,293,7,17,0,0,293,294,7,4,0,0,294,16,
	1,0,0,0,295,296,7,11,0,0,296,297,7,9,0,0,297,298,7,1,0,0,298,299,7,13,0,
	0,299,300,7,16,0,0,300,18,1,0,0,0,301,302,7,2,0,0,302,303,7,8,0,0,303,304,
	7,18,0,0,304,20,1,0,0,0,305,306,7,2,0,0,306,307,7,9,0,0,307,22,1,0,0,0,
	308,309,7,2,0,0,309,310,7,9,0,0,310,311,7,19,0,0,311,312,7,1,0,0,312,313,
	7,16,0,0,313,314,7,9,0,0,314,24,1,0,0,0,315,316,7,6,0,0,316,317,7,10,0,
	0,317,318,7,8,0,0,318,327,7,14,0,0,319,320,7,13,0,0,320,321,7,8,0,0,321,
	322,7,1,0,0,322,323,7,9,0,0,323,324,5,32,0,0,324,325,7,13,0,0,325,327,7,
	8,0,0,326,315,1,0,0,0,326,319,1,0,0,0,327,26,1,0,0,0,328,329,7,6,0,0,329,
	330,7,10,0,0,330,331,7,13,0,0,331,337,7,6,0,0,332,333,7,13,0,0,333,334,
	7,8,0,0,334,335,7,1,0,0,335,337,7,9,0,0,336,328,1,0,0,0,336,332,1,0,0,0,
	337,28,1,0,0,0,338,339,7,9,0,0,339,340,7,16,0,0,340,341,7,17,0,0,341,342,
	7,6,0,0,342,343,7,4,0,0,343,344,7,19,0,0,344,345,7,8,0,0,345,346,7,13,0,
	0,346,360,7,6,0,0,347,348,7,2,0,0,348,349,7,6,0,0,349,350,5,32,0,0,350,
	351,7,9,0,0,351,352,7,16,0,0,352,353,7,4,0,0,353,354,7,9,0,0,354,355,5,
	32,0,0,355,356,7,20,0,0,356,357,7,9,0,0,357,358,7,2,0,0,358,360,7,9,0,0,
	359,338,1,0,0,0,359,347,1,0,0,0,360,30,1,0,0,0,361,362,7,6,0,0,362,363,
	7,1,0,0,363,364,7,2,0,0,364,32,1,0,0,0,365,366,7,14,0,0,366,367,7,8,0,0,
	367,368,7,10,0,0,368,369,7,6,0,0,369,34,1,0,0,0,370,371,7,19,0,0,371,372,
	7,8,0,0,372,373,7,16,0,0,373,374,7,17,0,0,374,375,5,32,0,0,375,376,7,13,
	0,0,376,377,7,16,0,0,377,378,7,6,0,0,378,388,7,21,0,0,379,380,7,11,0,0,
	380,381,7,9,0,0,381,382,7,1,0,0,382,383,5,32,0,0,383,384,7,21,0,0,384,385,
	7,0,0,0,385,386,7,13,0,0,386,388,7,9,0,0,387,370,1,0,0,0,387,379,1,0,0,
	0,388,36,1,0,0,0,389,390,7,6,0,0,390,391,7,1,0,0,391,392,7,2,0,0,392,393,
	7,14,0,0,393,394,7,9,0,0,394,403,7,4,0,0,395,396,7,14,0,0,396,397,7,8,0,
	0,397,398,7,1,0,0,398,399,7,21,0,0,399,400,7,0,0,0,400,401,7,4,0,0,401,
	403,7,0,0,0,402,389,1,0,0,0,402,395,1,0,0,0,403,38,1,0,0,0,404,405,7,14,
	0,0,405,406,7,9,0,0,406,412,7,4,0,0,407,408,7,21,0,0,408,409,7,0,0,0,409,
	410,7,4,0,0,410,412,7,0,0,0,411,404,1,0,0,0,411,407,1,0,0,0,412,40,1,0,
	0,0,413,414,7,21,0,0,414,415,7,9,0,0,415,416,7,4,0,0,416,417,5,32,0,0,417,
	418,7,18,0,0,418,419,7,0,0,0,419,420,7,10,0,0,420,421,7,9,0,0,421,440,7,
	4,0,0,422,423,7,5,0,0,423,424,7,3,0,0,424,425,5,32,0,0,425,426,7,18,0,0,
	426,427,7,0,0,0,427,428,7,10,0,0,428,429,7,15,0,0,429,440,7,6,0,0,430,431,
	7,21,0,0,431,432,7,9,0,0,432,433,7,4,0,0,433,434,5,32,0,0,434,435,7,11,
	0,0,435,436,7,9,0,0,436,437,7,21,0,0,437,438,7,8,0,0,438,440,7,0,0,0,439,
	413,1,0,0,0,439,422,1,0,0,0,439,430,1,0,0,0,440,42,1,0,0,0,441,442,7,21,
	0,0,442,443,7,9,0,0,443,444,7,4,0,0,444,445,5,32,0,0,445,446,7,4,0,0,446,
	447,7,6,0,0,447,448,7,14,0,0,448,449,7,6,0,0,449,450,7,4,0,0,450,451,7,
	6,0,0,451,452,7,1,0,0,452,453,7,11,0,0,453,454,7,8,0,0,454,468,7,0,0,0,
	455,456,7,5,0,0,456,457,7,3,0,0,457,458,5,32,0,0,458,459,7,4,0,0,459,460,
	7,6,0,0,460,461,7,14,0,0,461,462,7,6,0,0,462,463,7,4,0,0,463,464,7,6,0,
	0,464,465,7,1,0,0,465,466,7,11,0,0,466,468,7,6,0,0,467,441,1,0,0,0,467,
	455,1,0,0,0,468,44,1,0,0,0,469,470,7,6,0,0,470,471,7,1,0,0,471,472,7,2,
	0,0,472,473,7,14,0,0,473,474,7,15,0,0,474,475,7,1,0,0,475,476,7,11,0,0,
	476,477,7,16,0,0,477,478,7,8,0,0,478,479,7,9,0,0,479,491,7,1,0,0,480,481,
	7,14,0,0,481,482,7,8,0,0,482,483,7,1,0,0,483,484,7,14,0,0,484,485,7,15,
	0,0,485,486,7,1,0,0,486,487,7,11,0,0,487,488,7,8,0,0,488,489,7,9,0,0,489,
	491,7,1,0,0,490,469,1,0,0,0,490,480,1,0,0,0,491,46,1,0,0,0,492,493,7,14,
	0,0,493,494,7,15,0,0,494,495,7,1,0,0,495,496,7,11,0,0,496,497,7,16,0,0,
	497,498,7,8,0,0,498,499,7,9,0,0,499,508,7,1,0,0,500,501,7,14,0,0,501,502,
	7,15,0,0,502,503,7,1,0,0,503,504,7,11,0,0,504,505,7,8,0,0,505,506,7,9,0,
	0,506,508,7,1,0,0,507,492,1,0,0,0,507,500,1,0,0,0,508,48,1,0,0,0,509,510,
	7,7,0,0,510,511,7,9,0,0,511,512,7,16,0,0,512,513,7,9,0,0,513,50,1,0,0,0,
	514,515,7,6,0,0,515,516,7,1,0,0,516,517,7,2,0,0,517,518,7,8,0,0,518,525,
	7,14,0,0,519,520,7,14,0,0,520,521,7,8,0,0,521,522,7,1,0,0,522,523,7,13,
	0,0,523,525,7,8,0,0,524,514,1,0,0,0,524,519,1,0,0,0,525,52,1,0,0,0,526,
	527,7,13,0,0,527,531,7,8,0,0,528,529,7,8,0,0,529,531,7,14,0,0,530,526,1,
	0,0,0,530,528,1,0,0,0,531,54,1,0,0,0,532,533,7,8,0,0,533,534,7,1,0,0,534,
	56,1,0,0,0,535,536,7,18,0,0,536,537,7,9,0,0,537,538,7,8,0,0,538,545,7,2,
	0,0,539,540,7,18,0,0,540,541,7,0,0,0,541,542,7,11,0,0,542,543,7,8,0,0,543,
	545,7,9,0,0,544,535,1,0,0,0,544,539,1,0,0,0,545,58,1,0,0,0,546,547,7,6,
	0,0,547,548,7,1,0,0,548,549,7,16,0,0,549,550,7,6,0,0,550,551,7,4,0,0,551,
	560,7,9,0,0,552,553,7,8,0,0,553,554,7,1,0,0,554,555,7,16,0,0,555,556,7,
	6,0,0,556,557,7,7,0,0,557,558,7,6,0,0,558,560,7,4,0,0,559,546,1,0,0,0,559,
	552,1,0,0,0,560,60,1,0,0,0,561,562,7,10,0,0,562,563,7,0,0,0,563,564,7,5,
	0,0,564,565,7,6,0,0,565,566,7,10,0,0,566,62,1,0,0,0,567,568,7,2,0,0,568,
	569,7,8,0,0,569,570,7,20,0,0,570,571,7,6,0,0,571,572,7,1,0,0,572,573,7,
	13,0,0,573,574,7,8,0,0,574,575,7,9,0,0,575,576,7,1,0,0,576,64,1,0,0,0,577,
	578,7,20,0,0,578,579,7,9,0,0,579,580,7,2,0,0,580,66,1,0,0,0,581,582,7,1,
	0,0,582,583,7,8,0,0,583,584,7,10,0,0,584,68,1,0,0,0,585,586,7,1,0,0,586,
	587,7,9,0,0,587,591,7,16,0,0,588,589,7,1,0,0,589,591,7,9,0,0,590,585,1,
	0,0,0,590,588,1,0,0,0,591,70,1,0,0,0,592,593,7,9,0,0,593,594,7,14,0,0,594,
	72,1,0,0,0,595,596,7,17,0,0,596,597,7,0,0,0,597,598,7,11,0,0,598,599,7,
	6,0,0,599,600,7,4,0,0,600,74,1,0,0,0,601,602,7,9,0,0,602,605,7,4,0,0,603,
	605,7,9,0,0,604,601,1,0,0,0,604,603,1,0,0,0,605,76,1,0,0,0,606,607,7,21,
	0,0,607,608,7,0,0,0,608,609,7,11,0,0,609,610,7,22,0,0,610,611,7,6,0,0,611,
	612,7,2,0,0,612,78,1,0,0,0,613,614,7,6,0,0,614,615,7,1,0,0,615,616,7,2,
	0,0,616,617,7,21,0,0,617,618,7,4,0,0,618,619,7,9,0,0,619,620,7,11,0,0,620,
	621,7,6,0,0,621,622,7,2,0,0,622,623,7,15,0,0,623,624,7,4,0,0,624,670,7,
	6,0,0,625,626,7,14,0,0,626,627,7,8,0,0,627,628,7,1,0,0,628,629,7,13,0,0,
	629,630,7,15,0,0,630,631,7,5,0,0,631,632,7,21,0,0,632,633,7,4,0,0,633,634,
	7,9,0,0,634,635,7,11,0,0,635,636,7,6,0,0,636,637,7,13,0,0,637,670,7,9,0,
	0,638,639,7,14,0,0,639,640,7,8,0,0,640,641,7,1,0,0,641,642,7,13,0,0,642,
	643,7,15,0,0,643,644,7,5,0,0,644,645,7,0,0,0,645,646,7,10,0,0,646,647,7,
	7,0,0,647,648,7,9,0,0,648,649,7,4,0,0,649,650,7,8,0,0,650,651,7,16,0,0,
	651,652,7,20,0,0,652,670,7,9,0,0,653,654,7,14,0,0,654,655,7,8,0,0,655,656,
	7,1,0,0,656,657,7,21,0,0,657,658,7,4,0,0,658,659,7,9,0,0,659,660,7,11,0,
	0,660,661,7,6,0,0,661,662,7,2,0,0,662,663,7,8,0,0,663,664,7,20,0,0,664,
	665,7,8,0,0,665,666,7,6,0,0,666,667,7,1,0,0,667,668,7,16,0,0,668,670,7,
	9,0,0,669,613,1,0,0,0,669,625,1,0,0,0,669,638,1,0,0,0,669,653,1,0,0,0,670,
	80,1,0,0,0,671,672,7,21,0,0,672,673,7,4,0,0,673,674,7,9,0,0,674,675,7,11,
	0,0,675,676,7,6,0,0,676,677,7,2,0,0,677,678,7,15,0,0,678,679,7,4,0,0,679,
	716,7,6,0,0,680,681,7,13,0,0,681,682,7,15,0,0,682,683,7,5,0,0,683,684,7,
	21,0,0,684,685,7,4,0,0,685,686,7,9,0,0,686,687,7,11,0,0,687,688,7,6,0,0,
	688,689,7,13,0,0,689,716,7,9,0,0,690,691,7,13,0,0,691,692,7,15,0,0,692,
	693,7,5,0,0,693,694,7,0,0,0,694,695,7,10,0,0,695,696,7,7,0,0,696,697,7,
	9,0,0,697,698,7,4,0,0,698,699,7,8,0,0,699,700,7,16,0,0,700,701,7,20,0,0,
	701,716,7,9,0,0,702,703,7,21,0,0,703,704,7,4,0,0,704,705,7,9,0,0,705,706,
	7,11,0,0,706,707,7,6,0,0,707,708,7,2,0,0,708,709,7,8,0,0,709,710,7,20,0,
	0,710,711,7,8,0,0,711,712,7,6,0,0,712,713,7,1,0,0,713,714,7,16,0,0,714,
	716,7,9,0,0,715,671,1,0,0,0,715,680,1,0,0,0,715,690,1,0,0,0,715,702,1,0,
	0,0,716,82,1,0,0,0,717,718,7,21,0,0,718,719,7,4,0,0,719,720,7,9,0,0,720,
	721,7,11,0,0,721,722,7,6,0,0,722,723,7,13,0,0,723,741,7,9,0,0,724,725,7,
	0,0,0,725,726,7,10,0,0,726,727,7,7,0,0,727,728,7,9,0,0,728,729,7,4,0,0,
	729,730,7,8,0,0,730,731,7,16,0,0,731,732,7,20,0,0,732,741,7,9,0,0,733,734,
	7,21,0,0,734,735,7,4,0,0,735,736,7,9,0,0,736,737,7,7,0,0,737,738,7,4,0,
	0,738,739,7,0,0,0,739,741,7,20,0,0,740,717,1,0,0,0,740,724,1,0,0,0,740,
	733,1,0,0,0,741,84,1,0,0,0,742,743,7,14,0,0,743,744,7,8,0,0,744,745,7,1,
	0,0,745,746,7,21,0,0,746,747,7,4,0,0,747,748,7,9,0,0,748,749,7,11,0,0,749,
	750,7,6,0,0,750,751,7,13,0,0,751,775,7,9,0,0,752,753,7,14,0,0,753,754,7,
	8,0,0,754,755,7,1,0,0,755,756,7,0,0,0,756,757,7,10,0,0,757,758,7,7,0,0,
	758,759,7,9,0,0,759,760,7,4,0,0,760,761,7,8,0,0,761,762,7,16,0,0,762,763,
	7,20,0,0,763,775,7,9,0,0,764,765,7,6,0,0,765,766,7,1,0,0,766,767,7,2,0,
	0,767,768,7,21,0,0,768,769,7,4,0,0,769,770,7,9,0,0,770,771,7,7,0,0,771,
	772,7,4,0,0,772,773,7,0,0,0,773,775,7,20,0,0,774,742,1,0,0,0,774,752,1,
	0,0,0,774,764,1,0,0,0,775,86,1,0,0,0,776,777,7,5,0,0,777,778,7,4,0,0,778,
	779,7,6,0,0,779,780,7,0,0,0,780,788,7,22,0,0,781,782,7,4,0,0,782,783,7,
	9,0,0,783,784,7,20,0,0,784,785,7,21,0,0,785,786,7,6,0,0,786,788,7,4,0,0,
	787,776,1,0,0,0,787,781,1,0,0,0,788,88,1,0,0,0,789,790,7,11,0,0,790,791,
	7,9,0,0,791,792,7,1,0,0,792,793,7,16,0,0,793,794,7,8,0,0,794,795,7,1,0,
	0,795,796,7,15,0,0,796,807,7,6,0,0,797,798,7,11,0,0,798,799,7,9,0,0,799,
	800,7,1,0,0,800,801,7,16,0,0,801,802,7,8,0,0,802,803,7,1,0,0,803,804,7,
	15,0,0,804,805,7,0,0,0,805,807,7,4,0,0,806,789,1,0,0,0,806,797,1,0,0,0,
	807,90,1,0,0,0,808,809,7,4,0,0,809,810,7,6,0,0,810,811,7,16,0,0,811,812,
	7,15,0,0,812,813,7,4,0,0,813,831,7,1,0,0,814,815,7,4,0,0,815,816,7,6,0,
	0,816,817,7,7,0,0,817,818,7,4,0,0,818,819,7,6,0,0,819,820,7,13,0,0,820,
	821,7,0,0,0,821,831,7,4,0,0,822,823,7,4,0,0,823,824,7,6,0,0,824,825,7,16,
	0,0,825,826,7,9,0,0,826,827,7,4,0,0,827,828,7,1,0,0,828,829,7,0,0,0,829,
	831,7,4,0,0,830,808,1,0,0,0,830,814,1,0,0,0,830,822,1,0,0,0,831,92,1,0,
	0,0,832,833,7,4,0,0,833,834,7,6,0,0,834,835,7,0,0,0,835,836,7,10,0,0,836,
	94,1,0,0,0,837,838,7,4,0,0,838,839,7,6,0,0,839,840,7,11,0,0,840,841,7,9,
	0,0,841,842,7,4,0,0,842,843,7,2,0,0,843,96,1,0,0,0,844,845,7,4,0,0,845,
	846,7,6,0,0,846,847,7,21,0,0,847,848,7,6,0,0,848,849,7,0,0,0,849,858,7,
	16,0,0,850,851,7,4,0,0,851,852,7,6,0,0,852,853,7,21,0,0,853,854,7,6,0,0,
	854,855,7,16,0,0,855,856,7,8,0,0,856,858,7,4,0,0,857,844,1,0,0,0,857,850,
	1,0,0,0,858,98,1,0,0,0,859,860,7,13,0,0,860,861,7,6,0,0,861,862,7,16,0,
	0,862,100,1,0,0,0,863,864,7,16,0,0,864,865,7,17,0,0,865,866,7,6,0,0,866,
	876,7,1,0,0,867,868,7,6,0,0,868,869,7,1,0,0,869,870,7,16,0,0,870,871,7,
	9,0,0,871,872,7,1,0,0,872,873,7,11,0,0,873,874,7,6,0,0,874,876,7,13,0,0,
	875,863,1,0,0,0,875,867,1,0,0,0,876,102,1,0,0,0,877,878,7,15,0,0,878,879,
	7,1,0,0,879,880,7,16,0,0,880,881,7,8,0,0,881,892,7,10,0,0,882,883,7,17,
	0,0,883,884,7,0,0,0,884,885,7,13,0,0,885,886,7,16,0,0,886,887,7,0,0,0,887,
	888,5,32,0,0,888,889,7,23,0,0,889,890,7,15,0,0,890,892,7,6,0,0,891,877,
	1,0,0,0,891,882,1,0,0,0,892,104,1,0,0,0,893,894,7,16,0,0,894,901,7,9,0,
	0,895,896,7,17,0,0,896,897,7,0,0,0,897,898,7,13,0,0,898,899,7,16,0,0,899,
	901,7,0,0,0,900,893,1,0,0,0,900,895,1,0,0,0,901,106,1,0,0,0,902,903,7,16,
	0,0,903,904,7,3,0,0,904,905,7,21,0,0,905,906,7,6,0,0,906,108,1,0,0,0,907,
	908,7,2,0,0,908,909,7,6,0,0,909,910,7,14,0,0,910,911,7,8,0,0,911,912,7,
	1,0,0,912,913,7,8,0,0,913,918,7,4,0,0,914,915,7,18,0,0,915,916,7,0,0,0,
	916,918,7,4,0,0,917,907,1,0,0,0,917,914,1,0,0,0,918,110,1,0,0,0,919,920,
	7,6,0,0,920,921,7,1,0,0,921,922,7,2,0,0,922,923,7,19,0,0,923,924,7,17,0,
	0,924,925,7,8,0,0,925,926,7,10,0,0,926,939,7,6,0,0,927,928,7,14,0,0,928,
	929,7,8,0,0,929,930,7,1,0,0,930,931,7,20,0,0,931,932,7,8,0,0,932,933,7,
	6,0,0,933,934,7,1,0,0,934,935,7,16,0,0,935,936,7,4,0,0,936,937,7,0,0,0,
	937,939,7,13,0,0,938,919,1,0,0,0,938,927,1,0,0,0,939,112,1,0,0,0,940,941,
	7,20,0,0,941,942,7,8,0,0,942,943,7,6,0,0,943,944,7,1,0,0,944,945,7,16,0,
	0,945,946,7,4,0,0,946,947,7,0,0,0,947,948,7,13,0,0,948,949,5,32,0,0,949,
	950,7,23,0,0,950,951,7,15,0,0,951,952,7,6,0,0,952,114,1,0,0,0,953,954,7,
	19,0,0,954,955,7,17,0,0,955,956,7,8,0,0,956,957,7,10,0,0,957,967,7,6,0,
	0,958,959,7,20,0,0,959,960,7,8,0,0,960,961,7,6,0,0,961,962,7,1,0,0,962,
	963,7,16,0,0,963,964,7,4,0,0,964,965,7,0,0,0,965,967,7,13,0,0,966,953,1,
	0,0,0,966,958,1,0,0,0,967,116,1,0,0,0,968,969,7,19,0,0,969,970,7,8,0,0,
	970,971,7,16,0,0,971,972,7,17,0,0,972,118,1,0,0,0,973,974,5,43,0,0,974,
	120,1,0,0,0,975,976,5,45,0,0,976,122,1,0,0,0,977,978,5,42,0,0,978,981,5,
	42,0,0,979,981,5,94,0,0,980,977,1,0,0,0,980,979,1,0,0,0,981,124,1,0,0,0,
	982,983,5,42,0,0,983,126,1,0,0,0,984,985,5,47,0,0,985,128,1,0,0,0,986,987,
	5,58,0,0,987,992,5,61,0,0,988,989,5,60,0,0,989,992,5,45,0,0,990,992,5,8592,
	0,0,991,986,1,0,0,0,991,988,1,0,0,0,991,990,1,0,0,0,992,130,1,0,0,0,993,
	994,5,44,0,0,994,132,1,0,0,0,995,996,5,59,0,0,996,134,1,0,0,0,997,998,5,
	58,0,0,998,136,1,0,0,0,999,1000,5,61,0,0,1000,138,1,0,0,0,1001,1002,5,60,
	0,0,1002,1007,5,62,0,0,1003,1004,5,33,0,0,1004,1007,5,61,0,0,1005,1007,
	5,8800,0,0,1006,1001,1,0,0,0,1006,1003,1,0,0,0,1006,1005,1,0,0,0,1007,140,
	1,0,0,0,1008,1009,5,60,0,0,1009,142,1,0,0,0,1010,1011,5,60,0,0,1011,1014,
	5,61,0,0,1012,1014,5,8804,0,0,1013,1010,1,0,0,0,1013,1012,1,0,0,0,1014,
	144,1,0,0,0,1015,1016,5,62,0,0,1016,1019,5,61,0,0,1017,1019,5,8805,0,0,
	1018,1015,1,0,0,0,1018,1017,1,0,0,0,1019,146,1,0,0,0,1020,1021,5,62,0,0,
	1021,148,1,0,0,0,1022,1023,5,40,0,0,1023,150,1,0,0,0,1024,1025,5,41,0,0,
	1025,152,1,0,0,0,1026,1027,5,91,0,0,1027,154,1,0,0,0,1028,1029,5,40,0,0,
	1029,1030,5,46,0,0,1030,156,1,0,0,0,1031,1032,5,93,0,0,1032,158,1,0,0,0,
	1033,1034,5,46,0,0,1034,1035,5,41,0,0,1035,160,1,0,0,0,1036,1037,5,94,0,
	0,1037,1038,5,94,0,0,1038,162,1,0,0,0,1039,1040,5,64,0,0,1040,164,1,0,0,
	0,1041,1042,5,46,0,0,1042,166,1,0,0,0,1043,1044,5,46,0,0,1044,1045,5,46,
	0,0,1045,168,1,0,0,0,1046,1047,5,123,0,0,1047,170,1,0,0,0,1048,1049,5,125,
	0,0,1049,172,1,0,0,0,1050,1051,7,11,0,0,1051,1052,7,9,0,0,1052,1053,7,20,
	0,0,1053,1054,7,9,0,0,1054,174,1,0,0,0,1055,1056,7,15,0,0,1056,1057,7,1,
	0,0,1057,1058,7,8,0,0,1058,1059,7,16,0,0,1059,176,1,0,0,0,1060,1061,7,8,
	0,0,1061,1062,7,1,0,0,1062,1063,7,16,0,0,1063,1064,7,6,0,0,1064,1065,7,
	4,0,0,1065,1066,7,14,0,0,1066,1067,7,0,0,0,1067,1068,7,11,0,0,1068,1069,
	7,6,0,0,1069,178,1,0,0,0,1070,1071,7,15,0,0,1071,1072,7,13,0,0,1072,1073,
	7,6,0,0,1073,1074,7,13,0,0,1074,180,1,0,0,0,1075,1076,7,13,0,0,1076,1077,
	7,16,0,0,1077,1078,7,4,0,0,1078,1079,7,8,0,0,1079,1080,7,1,0,0,1080,1088,
	7,7,0,0,1081,1082,7,11,0,0,1082,1083,7,0,0,0,1083,1084,7,2,0,0,1084,1085,
	7,6,0,0,1085,1086,7,1,0,0,1086,1088,7,0,0,0,1087,1075,1,0,0,0,1087,1081,
	1,0,0,0,1088,182,1,0,0,0,1089,1090,7,8,0,0,1090,1091,7,20,0,0,1091,1092,
	7,21,0,0,1092,1093,7,10,0,0,1093,1094,7,6,0,0,1094,1095,7,20,0,0,1095,1096,
	7,6,0,0,1096,1097,7,1,0,0,1097,1098,7,16,0,0,1098,1099,7,0,0,0,1099,1100,
	7,16,0,0,1100,1101,7,8,0,0,1101,1102,7,9,0,0,1102,1103,7,1,0,0,1103,184,
	1,0,0,0,1104,1105,7,16,0,0,1105,1106,7,4,0,0,1106,1107,7,15,0,0,1107,1118,
	7,6,0,0,1108,1109,7,18,0,0,1109,1110,7,6,0,0,1110,1111,7,4,0,0,1111,1112,
	7,2,0,0,1112,1113,7,0,0,0,1113,1114,7,2,0,0,1114,1115,7,6,0,0,1115,1116,
	7,4,0,0,1116,1118,7,9,0,0,1117,1104,1,0,0,0,1117,1108,1,0,0,0,1118,186,
	1,0,0,0,1119,1120,7,14,0,0,1120,1121,7,0,0,0,1121,1122,7,10,0,0,1122,1123,
	7,13,0,0,1123,1130,7,6,0,0,1124,1125,7,14,0,0,1125,1126,7,0,0,0,1126,1127,
	7,10,0,0,1127,1128,7,13,0,0,1128,1130,7,9,0,0,1129,1119,1,0,0,0,1129,1124,
	1,0,0,0,1130,188,1,0,0,0,1131,1132,7,19,0,0,1132,1133,7,4,0,0,1133,1134,
	7,8,0,0,1134,1135,7,16,0,0,1135,1152,7,6,0,0,1136,1137,7,6,0,0,1137,1138,
	7,13,0,0,1138,1139,7,11,0,0,1139,1140,7,4,0,0,1140,1141,7,8,0,0,1141,1142,
	7,5,0,0,1142,1143,7,8,0,0,1143,1152,7,4,0,0,1144,1145,7,20,0,0,1145,1146,
	7,9,0,0,1146,1147,7,13,0,0,1147,1148,7,16,0,0,1148,1149,7,4,0,0,1149,1150,
	7,0,0,0,1150,1152,7,4,0,0,1151,1131,1,0,0,0,1151,1136,1,0,0,0,1151,1144,
	1,0,0,0,1152,190,1,0,0,0,1153,1154,7,4,0,0,1154,1155,7,6,0,0,1155,1156,
	7,0,0,0,1156,1162,7,2,0,0,1157,1158,7,10,0,0,1158,1159,7,6,0,0,1159,1160,
	7,6,0,0,1160,1162,7,4,0,0,1161,1153,1,0,0,0,1161,1157,1,0,0,0,1162,192,
	1,0,0,0,1163,1164,7,24,0,0,1164,1165,1,0,0,0,1165,1166,6,96,0,0,1166,194,
	1,0,0,0,1167,1168,5,47,0,0,1168,1169,5,47,0,0,1169,1173,1,0,0,0,1170,1172,
	8,25,0,0,1171,1170,1,0,0,0,1172,1175,1,0,0,0,1173,1171,1,0,0,0,1173,1174,
	1,0,0,0,1174,1176,1,0,0,0,1175,1173,1,0,0,0,1176,1177,6,97,0,0,1177,196,
	1,0,0,0,1178,1182,5,35,0,0,1179,1181,8,25,0,0,1180,1179,1,0,0,0,1181,1184,
	1,0,0,0,1182,1180,1,0,0,0,1182,1183,1,0,0,0,1183,1185,1,0,0,0,1184,1182,
	1,0,0,0,1185,1186,6,98,0,0,1186,198,1,0,0,0,1187,1191,7,26,0,0,1188,1190,
	7,27,0,0,1189,1188,1,0,0,0,1190,1193,1,0,0,0,1191,1189,1,0,0,0,1191,1192,
	1,0,0,0,1192,200,1,0,0,0,1193,1191,1,0,0,0,1194,1200,5,39,0,0,1195,1196,
	5,39,0,0,1196,1199,5,39,0,0,1197,1199,8,28,0,0,1198,1195,1,0,0,0,1198,1197,
	1,0,0,0,1199,1202,1,0,0,0,1200,1198,1,0,0,0,1200,1201,1,0,0,0,1201,1203,
	1,0,0,0,1202,1200,1,0,0,0,1203,1215,5,39,0,0,1204,1210,5,34,0,0,1205,1206,
	5,34,0,0,1206,1209,5,34,0,0,1207,1209,8,29,0,0,1208,1205,1,0,0,0,1208,1207,
	1,0,0,0,1209,1212,1,0,0,0,1210,1208,1,0,0,0,1210,1211,1,0,0,0,1211,1213,
	1,0,0,0,1212,1210,1,0,0,0,1213,1215,5,34,0,0,1214,1194,1,0,0,0,1214,1204,
	1,0,0,0,1215,202,1,0,0,0,1216,1218,2,48,57,0,1217,1216,1,0,0,0,1218,1219,
	1,0,0,0,1219,1217,1,0,0,0,1219,1220,1,0,0,0,1220,204,1,0,0,0,1221,1223,
	2,48,57,0,1222,1221,1,0,0,0,1223,1224,1,0,0,0,1224,1222,1,0,0,0,1224,1225,
	1,0,0,0,1225,1238,1,0,0,0,1226,1228,5,46,0,0,1227,1229,2,48,57,0,1228,1227,
	1,0,0,0,1229,1230,1,0,0,0,1230,1228,1,0,0,0,1230,1231,1,0,0,0,1231,1233,
	1,0,0,0,1232,1234,3,207,103,0,1233,1232,1,0,0,0,1233,1234,1,0,0,0,1234,
	1236,1,0,0,0,1235,1226,1,0,0,0,1235,1236,1,0,0,0,1236,1239,1,0,0,0,1237,
	1239,3,207,103,0,1238,1235,1,0,0,0,1238,1237,1,0,0,0,1239,206,1,0,0,0,1240,
	1242,7,6,0,0,1241,1243,7,30,0,0,1242,1241,1,0,0,0,1242,1243,1,0,0,0,1243,
	1245,1,0,0,0,1244,1246,2,48,57,0,1245,1244,1,0,0,0,1246,1247,1,0,0,0,1247,
	1245,1,0,0,0,1247,1248,1,0,0,0,1248,208,1,0,0,0,62,0,213,247,264,275,289,
	326,336,359,387,402,411,439,467,490,507,524,530,544,559,590,604,669,715,
	740,774,787,806,830,857,875,891,900,917,938,966,980,991,1006,1013,1018,
	1087,1117,1129,1151,1161,1173,1182,1191,1198,1200,1208,1210,1214,1219,1224,
	1230,1233,1235,1238,1242,1247,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!StepCodeLexer.__ATN) {
			StepCodeLexer.__ATN = new ATNDeserializer().deserialize(StepCodeLexer._serializedATN);
		}

		return StepCodeLexer.__ATN;
	}


	static DecisionsToDFA = StepCodeLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}