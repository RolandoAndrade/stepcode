// Generated from src/StepCode.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class StepCodeLexer extends Lexer {
	public static readonly AND = 1;
	public static readonly ARRAY = 2;
	public static readonly BEGIN = 3;
	public static readonly BOOLEAN = 4;
	public static readonly ENDCASE = 5;
	public static readonly CASE = 6;
	public static readonly CHAR = 7;
	public static readonly CHR = 8;
	public static readonly CONST = 9;
	public static readonly DIV = 10;
	public static readonly DO = 11;
	public static readonly DOWNTO = 12;
	public static readonly ELIF = 13;
	public static readonly ELSE = 14;
	public static readonly OTHERWISE = 15;
	public static readonly END = 16;
	public static readonly FILE = 17;
	public static readonly WITHSTEP = 18;
	public static readonly ENDFOR = 19;
	public static readonly FOR = 20;
	public static readonly FUNCTION = 21;
	public static readonly GOTO = 22;
	public static readonly ENDIF = 23;
	public static readonly IF = 24;
	public static readonly IN = 25;
	public static readonly INTEGER = 26;
	public static readonly LABEL = 27;
	public static readonly MOD = 28;
	public static readonly NIL = 29;
	public static readonly NOT = 30;
	public static readonly OF = 31;
	public static readonly HACER = 32;
	public static readonly OR = 33;
	public static readonly PACKED = 34;
	public static readonly PROCEDURE = 35;
	public static readonly PROGRAM = 36;
	public static readonly ENDPROGRAM = 37;
	public static readonly BREAK = 38;
	public static readonly CONTINUE = 39;
	public static readonly RETURN = 40;
	public static readonly REAL = 41;
	public static readonly RECORD = 42;
	public static readonly REPEAT = 43;
	public static readonly SET = 44;
	public static readonly THEN = 45;
	public static readonly TO = 46;
	public static readonly TYPE = 47;
	public static readonly UNTIL = 48;
	public static readonly DEFINE = 49;
	public static readonly ENDWHILE = 50;
	public static readonly WHILE = 51;
	public static readonly WITH = 52;
	public static readonly PLUS = 53;
	public static readonly MINUS = 54;
	public static readonly POWER = 55;
	public static readonly STAR = 56;
	public static readonly SLASH = 57;
	public static readonly ASSIGN = 58;
	public static readonly COMMA = 59;
	public static readonly SEMI = 60;
	public static readonly COLON = 61;
	public static readonly EQUAL = 62;
	public static readonly NOT_EQUAL = 63;
	public static readonly LT = 64;
	public static readonly LE = 65;
	public static readonly GE = 66;
	public static readonly GT = 67;
	public static readonly LPAREN = 68;
	public static readonly RPAREN = 69;
	public static readonly LBRACK = 70;
	public static readonly LBRACK2 = 71;
	public static readonly RBRACK = 72;
	public static readonly RBRACK2 = 73;
	public static readonly POINTER = 74;
	public static readonly AT = 75;
	public static readonly DOT = 76;
	public static readonly DOTDOT = 77;
	public static readonly LCURLY = 78;
	public static readonly RCURLY = 79;
	public static readonly AS = 80;
	public static readonly UNIT = 81;
	public static readonly INTERFACE = 82;
	public static readonly USES = 83;
	public static readonly STRING = 84;
	public static readonly IMPLEMENTATION = 85;
	public static readonly TRUE = 86;
	public static readonly FALSE = 87;
	public static readonly WRITE = 88;
	public static readonly READ = 89;
	public static readonly WS = 90;
	public static readonly COMMENT_1 = 91;
	public static readonly COMMENT_2 = 92;
	public static readonly IDENT = 93;
	public static readonly STRING_LITERAL = 94;
	public static readonly NUM_INT = 95;
	public static readonly NUM_REAL = 96;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, null, 
                                                            "'ARRAY'", "'BEGIN'", 
                                                            null, null, 
                                                            null, null, 
                                                            "'CHR'", "'CONST'", 
                                                            "'DIV'", "'DO'", 
                                                            "'DOWNTO'", 
                                                            null, null, 
                                                            null, "'END'", 
                                                            "'FILE'", null, 
                                                            null, null, 
                                                            "'FUNCTION'", 
                                                            "'GOTO'", null, 
                                                            null, "'IN'", 
                                                            null, "'LABEL'", 
                                                            "'MOD'", "'NIL'", 
                                                            null, "'OF'", 
                                                            "'HACER'", null, 
                                                            "'PACKED'", 
                                                            "'PROCEDURE'", 
                                                            null, null, 
                                                            null, null, 
                                                            null, "'REAL'", 
                                                            "'RECORD'", 
                                                            "'REPEAT'", 
                                                            "'SET'", null, 
                                                            null, "'TYPE'", 
                                                            "'UNTIL'", null, 
                                                            null, null, 
                                                            "'WITH'", "'+'", 
                                                            "'-'", null, 
                                                            "'*'", "'/'", 
                                                            null, "','", 
                                                            "';'", "':'", 
                                                            "'='", null, 
                                                            "'<'", null, 
                                                            null, "'>'", 
                                                            "'('", "')'", 
                                                            "'['", "'(.'", 
                                                            "']'", "'.)'", 
                                                            "'^'", "'@'", 
                                                            "'.'", "'..'", 
                                                            "'{'", "'}'", 
                                                            "'COMO'", "'UNIT'", 
                                                            "'INTERFACE'", 
                                                            "'USES'", null, 
                                                            "'IMPLEMENTATION'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "AND", 
                                                             "ARRAY", "BEGIN", 
                                                             "BOOLEAN", 
                                                             "ENDCASE", 
                                                             "CASE", "CHAR", 
                                                             "CHR", "CONST", 
                                                             "DIV", "DO", 
                                                             "DOWNTO", "ELIF", 
                                                             "ELSE", "OTHERWISE", 
                                                             "END", "FILE", 
                                                             "WITHSTEP", 
                                                             "ENDFOR", "FOR", 
                                                             "FUNCTION", 
                                                             "GOTO", "ENDIF", 
                                                             "IF", "IN", 
                                                             "INTEGER", 
                                                             "LABEL", "MOD", 
                                                             "NIL", "NOT", 
                                                             "OF", "HACER", 
                                                             "OR", "PACKED", 
                                                             "PROCEDURE", 
                                                             "PROGRAM", 
                                                             "ENDPROGRAM", 
                                                             "BREAK", "CONTINUE", 
                                                             "RETURN", "REAL", 
                                                             "RECORD", "REPEAT", 
                                                             "SET", "THEN", 
                                                             "TO", "TYPE", 
                                                             "UNTIL", "DEFINE", 
                                                             "ENDWHILE", 
                                                             "WHILE", "WITH", 
                                                             "PLUS", "MINUS", 
                                                             "POWER", "STAR", 
                                                             "SLASH", "ASSIGN", 
                                                             "COMMA", "SEMI", 
                                                             "COLON", "EQUAL", 
                                                             "NOT_EQUAL", 
                                                             "LT", "LE", 
                                                             "GE", "GT", 
                                                             "LPAREN", "RPAREN", 
                                                             "LBRACK", "LBRACK2", 
                                                             "RBRACK", "RBRACK2", 
                                                             "POINTER", 
                                                             "AT", "DOT", 
                                                             "DOTDOT", "LCURLY", 
                                                             "RCURLY", "AS", 
                                                             "UNIT", "INTERFACE", 
                                                             "USES", "STRING", 
                                                             "IMPLEMENTATION", 
                                                             "TRUE", "FALSE", 
                                                             "WRITE", "READ", 
                                                             "WS", "COMMENT_1", 
                                                             "COMMENT_2", 
                                                             "IDENT", "STRING_LITERAL", 
                                                             "NUM_INT", 
                                                             "NUM_REAL" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"AND", "ARRAY", "BEGIN", "BOOLEAN", "ENDCASE", "CASE", "CHAR", "CHR", 
		"CONST", "DIV", "DO", "DOWNTO", "ELIF", "ELSE", "OTHERWISE", "END", "FILE", 
		"WITHSTEP", "ENDFOR", "FOR", "FUNCTION", "GOTO", "ENDIF", "IF", "IN", 
		"INTEGER", "LABEL", "MOD", "NIL", "NOT", "OF", "HACER", "OR", "PACKED", 
		"PROCEDURE", "PROGRAM", "ENDPROGRAM", "BREAK", "CONTINUE", "RETURN", "REAL", 
		"RECORD", "REPEAT", "SET", "THEN", "TO", "TYPE", "UNTIL", "DEFINE", "ENDWHILE", 
		"WHILE", "WITH", "PLUS", "MINUS", "POWER", "STAR", "SLASH", "ASSIGN", 
		"COMMA", "SEMI", "COLON", "EQUAL", "NOT_EQUAL", "LT", "LE", "GE", "GT", 
		"LPAREN", "RPAREN", "LBRACK", "LBRACK2", "RBRACK", "RBRACK2", "POINTER", 
		"AT", "DOT", "DOTDOT", "LCURLY", "RCURLY", "AS", "UNIT", "INTERFACE", 
		"USES", "STRING", "IMPLEMENTATION", "TRUE", "FALSE", "WRITE", "READ", 
		"WS", "COMMENT_1", "COMMENT_2", "IDENT", "STRING_LITERAL", "NUM_INT", 
		"NUM_REAL", "EXPONENT",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, StepCodeLexer._ATN, StepCodeLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "StepCode.g4"; }

	public get literalNames(): (string | null)[] { return StepCodeLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return StepCodeLexer.symbolicNames; }
	public get ruleNames(): string[] { return StepCodeLexer.ruleNames; }

	public get serializedATN(): number[] { return StepCodeLexer._serializedATN; }

	public get channelNames(): string[] { return StepCodeLexer.channelNames; }

	public get modeNames(): string[] { return StepCodeLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,96,993,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,
	7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,
	74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,
	2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,
	89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,
	7,96,1,0,1,0,1,0,1,0,3,0,200,8,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,
	2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
	3,1,3,1,3,1,3,1,3,3,3,234,8,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
	4,1,4,1,4,1,4,1,4,3,4,251,8,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,3,5,262,
	8,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,276,8,6,1,7,1,7,
	1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,
	1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,
	12,1,12,3,12,313,8,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,3,13,323,
	8,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,
	14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,3,14,346,8,14,1,15,1,15,1,15,1,15,
	1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,
	17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,3,17,374,8,17,1,18,1,18,1,18,1,18,
	1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,3,18,389,8,18,1,19,1,19,1,
	19,1,19,1,19,1,19,1,19,3,19,398,8,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
	1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,
	22,1,22,1,22,3,22,424,8,22,1,23,1,23,1,23,1,23,3,23,430,8,23,1,24,1,24,
	1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,
	25,448,8,25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,28,1,28,
	1,28,1,28,1,29,1,29,1,29,1,29,1,29,3,29,469,8,29,1,30,1,30,1,30,1,31,1,
	31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,3,32,483,8,32,1,33,1,33,1,33,1,33,
	1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,
	35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
	1,35,1,35,1,35,1,35,1,35,1,35,1,35,3,35,525,8,35,1,36,1,36,1,36,1,36,1,
	36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
	1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,559,
	8,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,3,37,572,8,
	37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
	1,38,1,38,1,38,3,38,591,8,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,
	39,1,39,1,39,1,39,1,39,1,39,3,39,607,8,39,1,40,1,40,1,40,1,40,1,40,1,41,
	1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,
	43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,
	3,44,644,8,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,3,45,653,8,45,1,46,1,46,
	1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,
	48,1,48,1,48,1,48,1,48,3,48,676,8,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
	1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,3,49,697,8,
	49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,3,50,
	712,8,50,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,54,3,
	54,726,8,54,1,55,1,55,1,56,1,56,1,57,1,57,1,57,1,57,1,57,3,57,737,8,57,
	1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,62,1,62,1,62,3,62,752,
	8,62,1,63,1,63,1,64,1,64,1,64,3,64,759,8,64,1,65,1,65,1,65,3,65,764,8,65,
	1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,70,1,71,1,71,1,72,1,
	72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,76,1,76,1,77,1,77,1,78,1,78,
	1,79,1,79,1,79,1,79,1,79,1,80,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,
	81,1,81,1,81,1,81,1,81,1,81,1,82,1,82,1,82,1,82,1,82,1,83,1,83,1,83,1,83,
	1,83,1,83,1,83,1,83,1,83,1,83,1,83,1,83,3,83,832,8,83,1,84,1,84,1,84,1,
	84,1,84,1,84,1,84,1,84,1,84,1,84,1,84,1,84,1,84,1,84,1,84,1,85,1,85,1,85,
	1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,3,85,862,8,85,1,86,1,
	86,1,86,1,86,1,86,1,86,1,86,1,86,1,86,1,86,3,86,874,8,86,1,87,1,87,1,87,
	1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,
	87,1,87,1,87,3,87,896,8,87,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,3,88,
	906,8,88,1,89,1,89,1,89,1,89,1,90,1,90,1,90,1,90,5,90,916,8,90,10,90,12,
	90,919,9,90,1,90,1,90,1,91,1,91,5,91,925,8,91,10,91,12,91,928,9,91,1,91,
	1,91,1,92,1,92,5,92,934,8,92,10,92,12,92,937,9,92,1,93,1,93,1,93,1,93,5,
	93,943,8,93,10,93,12,93,946,9,93,1,93,1,93,1,93,1,93,1,93,5,93,953,8,93,
	10,93,12,93,956,9,93,1,93,3,93,959,8,93,1,94,4,94,962,8,94,11,94,12,94,
	963,1,95,4,95,967,8,95,11,95,12,95,968,1,95,1,95,4,95,973,8,95,11,95,12,
	95,974,1,95,3,95,978,8,95,3,95,980,8,95,1,95,3,95,983,8,95,1,96,1,96,3,
	96,987,8,96,1,96,4,96,990,8,96,11,96,12,96,991,0,0,97,1,1,3,2,5,3,7,4,9,
	5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,
	18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,
	30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,
	42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,
	107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,
	64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,
	149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,
	85,171,86,173,87,175,88,177,89,179,90,181,91,183,92,185,93,187,94,189,95,
	191,96,193,0,1,0,30,2,0,65,65,97,97,2,0,78,78,110,110,2,0,68,68,100,100,
	2,0,89,89,121,121,2,0,82,82,114,114,2,0,66,66,98,98,2,0,69,69,101,101,2,
	0,71,71,103,103,2,0,73,73,105,105,2,0,79,79,111,111,2,0,76,76,108,108,2,
	0,67,67,99,99,2,0,195,195,227,227,2,0,83,83,115,115,2,0,70,70,102,102,2,
	0,85,85,117,117,2,0,84,84,116,116,2,0,72,72,104,104,2,0,86,86,118,118,2,
	0,87,87,119,119,2,0,77,77,109,109,2,0,80,80,112,112,2,0,75,75,107,107,3,
	0,9,10,13,13,32,32,2,0,10,10,13,13,2,0,65,90,97,122,4,0,48,57,65,90,95,
	95,97,122,1,0,39,39,1,0,34,34,2,0,43,43,45,45,1049,0,1,1,0,0,0,0,3,1,0,
	0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
	1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,
	0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
	1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
	0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
	1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
	0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
	1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,
	0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,
	1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,
	0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,
	0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,
	0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,
	0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,
	155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,
	1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,
	0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,
	0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,1,199,1,0,0,0,3,201,1,0,0,
	0,5,207,1,0,0,0,7,233,1,0,0,0,9,250,1,0,0,0,11,261,1,0,0,0,13,275,1,0,0,
	0,15,277,1,0,0,0,17,281,1,0,0,0,19,287,1,0,0,0,21,291,1,0,0,0,23,294,1,
	0,0,0,25,312,1,0,0,0,27,322,1,0,0,0,29,345,1,0,0,0,31,347,1,0,0,0,33,351,
	1,0,0,0,35,373,1,0,0,0,37,388,1,0,0,0,39,397,1,0,0,0,41,399,1,0,0,0,43,
	408,1,0,0,0,45,423,1,0,0,0,47,429,1,0,0,0,49,431,1,0,0,0,51,447,1,0,0,0,
	53,449,1,0,0,0,55,455,1,0,0,0,57,459,1,0,0,0,59,468,1,0,0,0,61,470,1,0,
	0,0,63,473,1,0,0,0,65,482,1,0,0,0,67,484,1,0,0,0,69,491,1,0,0,0,71,524,
	1,0,0,0,73,558,1,0,0,0,75,571,1,0,0,0,77,590,1,0,0,0,79,606,1,0,0,0,81,
	608,1,0,0,0,83,613,1,0,0,0,85,620,1,0,0,0,87,627,1,0,0,0,89,643,1,0,0,0,
	91,652,1,0,0,0,93,654,1,0,0,0,95,659,1,0,0,0,97,675,1,0,0,0,99,696,1,0,
	0,0,101,711,1,0,0,0,103,713,1,0,0,0,105,718,1,0,0,0,107,720,1,0,0,0,109,
	725,1,0,0,0,111,727,1,0,0,0,113,729,1,0,0,0,115,736,1,0,0,0,117,738,1,0,
	0,0,119,740,1,0,0,0,121,742,1,0,0,0,123,744,1,0,0,0,125,751,1,0,0,0,127,
	753,1,0,0,0,129,758,1,0,0,0,131,763,1,0,0,0,133,765,1,0,0,0,135,767,1,0,
	0,0,137,769,1,0,0,0,139,771,1,0,0,0,141,773,1,0,0,0,143,776,1,0,0,0,145,
	778,1,0,0,0,147,781,1,0,0,0,149,783,1,0,0,0,151,785,1,0,0,0,153,787,1,0,
	0,0,155,790,1,0,0,0,157,792,1,0,0,0,159,794,1,0,0,0,161,799,1,0,0,0,163,
	804,1,0,0,0,165,814,1,0,0,0,167,831,1,0,0,0,169,833,1,0,0,0,171,861,1,0,
	0,0,173,873,1,0,0,0,175,895,1,0,0,0,177,905,1,0,0,0,179,907,1,0,0,0,181,
	911,1,0,0,0,183,922,1,0,0,0,185,931,1,0,0,0,187,958,1,0,0,0,189,961,1,0,
	0,0,191,966,1,0,0,0,193,984,1,0,0,0,195,196,7,0,0,0,196,197,7,1,0,0,197,
	200,7,2,0,0,198,200,7,3,0,0,199,195,1,0,0,0,199,198,1,0,0,0,200,2,1,0,0,
	0,201,202,7,0,0,0,202,203,7,4,0,0,203,204,7,4,0,0,204,205,7,0,0,0,205,206,
	7,3,0,0,206,4,1,0,0,0,207,208,7,5,0,0,208,209,7,6,0,0,209,210,7,7,0,0,210,
	211,7,8,0,0,211,212,7,1,0,0,212,6,1,0,0,0,213,214,7,5,0,0,214,215,7,9,0,
	0,215,216,7,9,0,0,216,217,7,10,0,0,217,218,7,6,0,0,218,219,7,0,0,0,219,
	234,7,1,0,0,220,221,7,10,0,0,221,222,7,9,0,0,222,223,7,7,0,0,223,224,7,
	8,0,0,224,225,7,11,0,0,225,234,7,9,0,0,226,227,7,10,0,0,227,228,7,12,0,
	0,228,229,5,8220,0,0,229,230,7,7,0,0,230,231,7,8,0,0,231,232,7,11,0,0,232,
	234,7,9,0,0,233,213,1,0,0,0,233,220,1,0,0,0,233,226,1,0,0,0,234,8,1,0,0,
	0,235,236,7,6,0,0,236,237,7,1,0,0,237,238,7,2,0,0,238,239,7,11,0,0,239,
	240,7,0,0,0,240,241,7,13,0,0,241,251,7,6,0,0,242,243,7,14,0,0,243,244,7,
	8,0,0,244,245,7,1,0,0,245,246,7,13,0,0,246,247,7,6,0,0,247,248,7,7,0,0,
	248,249,7,15,0,0,249,251,7,1,0,0,250,235,1,0,0,0,250,242,1,0,0,0,251,10,
	1,0,0,0,252,253,7,13,0,0,253,254,7,6,0,0,254,255,7,7,0,0,255,256,7,15,0,
	0,256,262,7,1,0,0,257,258,7,11,0,0,258,259,7,0,0,0,259,260,7,13,0,0,260,
	262,7,6,0,0,261,252,1,0,0,0,261,257,1,0,0,0,262,12,1,0,0,0,263,264,7,11,
	0,0,264,265,7,0,0,0,265,266,7,4,0,0,266,267,7,0,0,0,267,268,7,11,0,0,268,
	269,7,16,0,0,269,270,7,6,0,0,270,276,7,4,0,0,271,272,7,11,0,0,272,273,7,
	17,0,0,273,274,7,0,0,0,274,276,7,4,0,0,275,263,1,0,0,0,275,271,1,0,0,0,
	276,14,1,0,0,0,277,278,7,11,0,0,278,279,7,17,0,0,279,280,7,4,0,0,280,16,
	1,0,0,0,281,282,7,11,0,0,282,283,7,9,0,0,283,284,7,1,0,0,284,285,7,13,0,
	0,285,286,7,16,0,0,286,18,1,0,0,0,287,288,7,2,0,0,288,289,7,8,0,0,289,290,
	7,18,0,0,290,20,1,0,0,0,291,292,7,2,0,0,292,293,7,9,0,0,293,22,1,0,0,0,
	294,295,7,2,0,0,295,296,7,9,0,0,296,297,7,19,0,0,297,298,7,1,0,0,298,299,
	7,16,0,0,299,300,7,9,0,0,300,24,1,0,0,0,301,302,7,6,0,0,302,303,7,10,0,
	0,303,304,7,8,0,0,304,313,7,14,0,0,305,306,7,13,0,0,306,307,7,8,0,0,307,
	308,7,1,0,0,308,309,7,9,0,0,309,310,5,32,0,0,310,311,7,13,0,0,311,313,7,
	8,0,0,312,301,1,0,0,0,312,305,1,0,0,0,313,26,1,0,0,0,314,315,7,6,0,0,315,
	316,7,10,0,0,316,317,7,13,0,0,317,323,7,6,0,0,318,319,7,13,0,0,319,320,
	7,8,0,0,320,321,7,1,0,0,321,323,7,9,0,0,322,314,1,0,0,0,322,318,1,0,0,0,
	323,28,1,0,0,0,324,325,7,9,0,0,325,326,7,16,0,0,326,327,7,17,0,0,327,328,
	7,6,0,0,328,329,7,4,0,0,329,330,7,19,0,0,330,331,7,8,0,0,331,332,7,13,0,
	0,332,346,7,6,0,0,333,334,7,2,0,0,334,335,7,6,0,0,335,336,5,32,0,0,336,
	337,7,9,0,0,337,338,7,16,0,0,338,339,7,4,0,0,339,340,7,9,0,0,340,341,5,
	32,0,0,341,342,7,20,0,0,342,343,7,9,0,0,343,344,7,2,0,0,344,346,7,9,0,0,
	345,324,1,0,0,0,345,333,1,0,0,0,346,30,1,0,0,0,347,348,7,6,0,0,348,349,
	7,1,0,0,349,350,7,2,0,0,350,32,1,0,0,0,351,352,7,14,0,0,352,353,7,8,0,0,
	353,354,7,10,0,0,354,355,7,6,0,0,355,34,1,0,0,0,356,357,7,19,0,0,357,358,
	7,8,0,0,358,359,7,16,0,0,359,360,7,17,0,0,360,361,5,32,0,0,361,362,7,13,
	0,0,362,363,7,16,0,0,363,364,7,6,0,0,364,374,7,21,0,0,365,366,7,11,0,0,
	366,367,7,9,0,0,367,368,7,1,0,0,368,369,5,32,0,0,369,370,7,21,0,0,370,371,
	7,0,0,0,371,372,7,13,0,0,372,374,7,9,0,0,373,356,1,0,0,0,373,365,1,0,0,
	0,374,36,1,0,0,0,375,376,7,6,0,0,376,377,7,1,0,0,377,378,7,2,0,0,378,379,
	7,14,0,0,379,380,7,9,0,0,380,389,7,4,0,0,381,382,7,14,0,0,382,383,7,8,0,
	0,383,384,7,1,0,0,384,385,7,21,0,0,385,386,7,0,0,0,386,387,7,4,0,0,387,
	389,7,0,0,0,388,375,1,0,0,0,388,381,1,0,0,0,389,38,1,0,0,0,390,391,7,14,
	0,0,391,392,7,9,0,0,392,398,7,4,0,0,393,394,7,21,0,0,394,395,7,0,0,0,395,
	396,7,4,0,0,396,398,7,0,0,0,397,390,1,0,0,0,397,393,1,0,0,0,398,40,1,0,
	0,0,399,400,7,14,0,0,400,401,7,15,0,0,401,402,7,1,0,0,402,403,7,11,0,0,
	403,404,7,16,0,0,404,405,7,8,0,0,405,406,7,9,0,0,406,407,7,1,0,0,407,42,
	1,0,0,0,408,409,7,7,0,0,409,410,7,9,0,0,410,411,7,16,0,0,411,412,7,9,0,
	0,412,44,1,0,0,0,413,414,7,6,0,0,414,415,7,1,0,0,415,416,7,2,0,0,416,417,
	7,8,0,0,417,424,7,14,0,0,418,419,7,14,0,0,419,420,7,8,0,0,420,421,7,1,0,
	0,421,422,7,13,0,0,422,424,7,8,0,0,423,413,1,0,0,0,423,418,1,0,0,0,424,
	46,1,0,0,0,425,426,7,13,0,0,426,430,7,8,0,0,427,428,7,8,0,0,428,430,7,14,
	0,0,429,425,1,0,0,0,429,427,1,0,0,0,430,48,1,0,0,0,431,432,7,8,0,0,432,
	433,7,1,0,0,433,50,1,0,0,0,434,435,7,6,0,0,435,436,7,1,0,0,436,437,7,16,
	0,0,437,438,7,6,0,0,438,439,7,4,0,0,439,448,7,9,0,0,440,441,7,8,0,0,441,
	442,7,1,0,0,442,443,7,16,0,0,443,444,7,6,0,0,444,445,7,7,0,0,445,446,7,
	6,0,0,446,448,7,4,0,0,447,434,1,0,0,0,447,440,1,0,0,0,448,52,1,0,0,0,449,
	450,7,10,0,0,450,451,7,0,0,0,451,452,7,5,0,0,452,453,7,6,0,0,453,454,7,
	10,0,0,454,54,1,0,0,0,455,456,7,20,0,0,456,457,7,9,0,0,457,458,7,2,0,0,
	458,56,1,0,0,0,459,460,7,1,0,0,460,461,7,8,0,0,461,462,7,10,0,0,462,58,
	1,0,0,0,463,464,7,1,0,0,464,465,7,9,0,0,465,469,7,16,0,0,466,467,7,1,0,
	0,467,469,7,9,0,0,468,463,1,0,0,0,468,466,1,0,0,0,469,60,1,0,0,0,470,471,
	7,9,0,0,471,472,7,14,0,0,472,62,1,0,0,0,473,474,7,17,0,0,474,475,7,0,0,
	0,475,476,7,11,0,0,476,477,7,6,0,0,477,478,7,4,0,0,478,64,1,0,0,0,479,480,
	7,9,0,0,480,483,7,4,0,0,481,483,7,9,0,0,482,479,1,0,0,0,482,481,1,0,0,0,
	483,66,1,0,0,0,484,485,7,21,0,0,485,486,7,0,0,0,486,487,7,11,0,0,487,488,
	7,22,0,0,488,489,7,6,0,0,489,490,7,2,0,0,490,68,1,0,0,0,491,492,7,21,0,
	0,492,493,7,4,0,0,493,494,7,9,0,0,494,495,7,11,0,0,495,496,7,6,0,0,496,
	497,7,2,0,0,497,498,7,15,0,0,498,499,7,4,0,0,499,500,7,6,0,0,500,70,1,0,
	0,0,501,502,7,21,0,0,502,503,7,4,0,0,503,504,7,9,0,0,504,505,7,11,0,0,505,
	506,7,6,0,0,506,507,7,13,0,0,507,525,7,9,0,0,508,509,7,0,0,0,509,510,7,
	10,0,0,510,511,7,7,0,0,511,512,7,9,0,0,512,513,7,4,0,0,513,514,7,8,0,0,
	514,515,7,16,0,0,515,516,7,20,0,0,516,525,7,9,0,0,517,518,7,21,0,0,518,
	519,7,4,0,0,519,520,7,9,0,0,520,521,7,7,0,0,521,522,7,4,0,0,522,523,7,0,
	0,0,523,525,7,20,0,0,524,501,1,0,0,0,524,508,1,0,0,0,524,517,1,0,0,0,525,
	72,1,0,0,0,526,527,7,14,0,0,527,528,7,8,0,0,528,529,7,1,0,0,529,530,7,21,
	0,0,530,531,7,4,0,0,531,532,7,9,0,0,532,533,7,11,0,0,533,534,7,6,0,0,534,
	535,7,13,0,0,535,559,7,9,0,0,536,537,7,14,0,0,537,538,7,8,0,0,538,539,7,
	1,0,0,539,540,7,0,0,0,540,541,7,10,0,0,541,542,7,7,0,0,542,543,7,9,0,0,
	543,544,7,4,0,0,544,545,7,8,0,0,545,546,7,16,0,0,546,547,7,20,0,0,547,559,
	7,9,0,0,548,549,7,6,0,0,549,550,7,1,0,0,550,551,7,2,0,0,551,552,7,21,0,
	0,552,553,7,4,0,0,553,554,7,9,0,0,554,555,7,7,0,0,555,556,7,4,0,0,556,557,
	7,0,0,0,557,559,7,20,0,0,558,526,1,0,0,0,558,536,1,0,0,0,558,548,1,0,0,
	0,559,74,1,0,0,0,560,561,7,5,0,0,561,562,7,4,0,0,562,563,7,6,0,0,563,564,
	7,0,0,0,564,572,7,22,0,0,565,566,7,4,0,0,566,567,7,9,0,0,567,568,7,20,0,
	0,568,569,7,21,0,0,569,570,7,6,0,0,570,572,7,4,0,0,571,560,1,0,0,0,571,
	565,1,0,0,0,572,76,1,0,0,0,573,574,7,11,0,0,574,575,7,9,0,0,575,576,7,1,
	0,0,576,577,7,16,0,0,577,578,7,8,0,0,578,579,7,1,0,0,579,580,7,15,0,0,580,
	591,7,6,0,0,581,582,7,11,0,0,582,583,7,9,0,0,583,584,7,1,0,0,584,585,7,
	16,0,0,585,586,7,8,0,0,586,587,7,1,0,0,587,588,7,15,0,0,588,589,7,0,0,0,
	589,591,7,4,0,0,590,573,1,0,0,0,590,581,1,0,0,0,591,78,1,0,0,0,592,593,
	7,4,0,0,593,594,7,6,0,0,594,595,7,16,0,0,595,596,7,15,0,0,596,597,7,4,0,
	0,597,607,7,1,0,0,598,599,7,4,0,0,599,600,7,6,0,0,600,601,7,7,0,0,601,602,
	7,4,0,0,602,603,7,6,0,0,603,604,7,13,0,0,604,605,7,0,0,0,605,607,7,4,0,
	0,606,592,1,0,0,0,606,598,1,0,0,0,607,80,1,0,0,0,608,609,7,4,0,0,609,610,
	7,6,0,0,610,611,7,0,0,0,611,612,7,10,0,0,612,82,1,0,0,0,613,614,7,4,0,0,
	614,615,7,6,0,0,615,616,7,11,0,0,616,617,7,9,0,0,617,618,7,4,0,0,618,619,
	7,2,0,0,619,84,1,0,0,0,620,621,7,4,0,0,621,622,7,6,0,0,622,623,7,21,0,0,
	623,624,7,6,0,0,624,625,7,0,0,0,625,626,7,16,0,0,626,86,1,0,0,0,627,628,
	7,13,0,0,628,629,7,6,0,0,629,630,7,16,0,0,630,88,1,0,0,0,631,632,7,16,0,
	0,632,633,7,17,0,0,633,634,7,6,0,0,634,644,7,1,0,0,635,636,7,6,0,0,636,
	637,7,1,0,0,637,638,7,16,0,0,638,639,7,9,0,0,639,640,7,1,0,0,640,641,7,
	11,0,0,641,642,7,6,0,0,642,644,7,13,0,0,643,631,1,0,0,0,643,635,1,0,0,0,
	644,90,1,0,0,0,645,646,7,16,0,0,646,653,7,9,0,0,647,648,7,17,0,0,648,649,
	7,0,0,0,649,650,7,13,0,0,650,651,7,16,0,0,651,653,7,0,0,0,652,645,1,0,0,
	0,652,647,1,0,0,0,653,92,1,0,0,0,654,655,7,16,0,0,655,656,7,3,0,0,656,657,
	7,21,0,0,657,658,7,6,0,0,658,94,1,0,0,0,659,660,7,15,0,0,660,661,7,1,0,
	0,661,662,7,16,0,0,662,663,7,8,0,0,663,664,7,10,0,0,664,96,1,0,0,0,665,
	666,7,2,0,0,666,667,7,6,0,0,667,668,7,14,0,0,668,669,7,8,0,0,669,670,7,
	1,0,0,670,671,7,8,0,0,671,676,7,4,0,0,672,673,7,18,0,0,673,674,7,0,0,0,
	674,676,7,4,0,0,675,665,1,0,0,0,675,672,1,0,0,0,676,98,1,0,0,0,677,678,
	7,6,0,0,678,679,7,1,0,0,679,680,7,2,0,0,680,681,7,19,0,0,681,682,7,17,0,
	0,682,683,7,8,0,0,683,684,7,10,0,0,684,697,7,6,0,0,685,686,7,14,0,0,686,
	687,7,8,0,0,687,688,7,1,0,0,688,689,7,20,0,0,689,690,7,8,0,0,690,691,7,
	6,0,0,691,692,7,1,0,0,692,693,7,16,0,0,693,694,7,4,0,0,694,695,7,0,0,0,
	695,697,7,13,0,0,696,677,1,0,0,0,696,685,1,0,0,0,697,100,1,0,0,0,698,699,
	7,19,0,0,699,700,7,17,0,0,700,701,7,8,0,0,701,702,7,10,0,0,702,712,7,6,
	0,0,703,704,7,20,0,0,704,705,7,8,0,0,705,706,7,6,0,0,706,707,7,1,0,0,707,
	708,7,16,0,0,708,709,7,4,0,0,709,710,7,0,0,0,710,712,7,13,0,0,711,698,1,
	0,0,0,711,703,1,0,0,0,712,102,1,0,0,0,713,714,7,19,0,0,714,715,7,8,0,0,
	715,716,7,16,0,0,716,717,7,17,0,0,717,104,1,0,0,0,718,719,5,43,0,0,719,
	106,1,0,0,0,720,721,5,45,0,0,721,108,1,0,0,0,722,723,5,42,0,0,723,726,5,
	42,0,0,724,726,5,94,0,0,725,722,1,0,0,0,725,724,1,0,0,0,726,110,1,0,0,0,
	727,728,5,42,0,0,728,112,1,0,0,0,729,730,5,47,0,0,730,114,1,0,0,0,731,732,
	5,58,0,0,732,737,5,61,0,0,733,734,5,60,0,0,734,737,5,45,0,0,735,737,5,8592,
	0,0,736,731,1,0,0,0,736,733,1,0,0,0,736,735,1,0,0,0,737,116,1,0,0,0,738,
	739,5,44,0,0,739,118,1,0,0,0,740,741,5,59,0,0,741,120,1,0,0,0,742,743,5,
	58,0,0,743,122,1,0,0,0,744,745,5,61,0,0,745,124,1,0,0,0,746,747,5,60,0,
	0,747,752,5,62,0,0,748,749,5,33,0,0,749,752,5,61,0,0,750,752,5,8800,0,0,
	751,746,1,0,0,0,751,748,1,0,0,0,751,750,1,0,0,0,752,126,1,0,0,0,753,754,
	5,60,0,0,754,128,1,0,0,0,755,756,5,60,0,0,756,759,5,61,0,0,757,759,5,8804,
	0,0,758,755,1,0,0,0,758,757,1,0,0,0,759,130,1,0,0,0,760,761,5,62,0,0,761,
	764,5,61,0,0,762,764,5,8805,0,0,763,760,1,0,0,0,763,762,1,0,0,0,764,132,
	1,0,0,0,765,766,5,62,0,0,766,134,1,0,0,0,767,768,5,40,0,0,768,136,1,0,0,
	0,769,770,5,41,0,0,770,138,1,0,0,0,771,772,5,91,0,0,772,140,1,0,0,0,773,
	774,5,40,0,0,774,775,5,46,0,0,775,142,1,0,0,0,776,777,5,93,0,0,777,144,
	1,0,0,0,778,779,5,46,0,0,779,780,5,41,0,0,780,146,1,0,0,0,781,782,5,94,
	0,0,782,148,1,0,0,0,783,784,5,64,0,0,784,150,1,0,0,0,785,786,5,46,0,0,786,
	152,1,0,0,0,787,788,5,46,0,0,788,789,5,46,0,0,789,154,1,0,0,0,790,791,5,
	123,0,0,791,156,1,0,0,0,792,793,5,125,0,0,793,158,1,0,0,0,794,795,7,11,
	0,0,795,796,7,9,0,0,796,797,7,20,0,0,797,798,7,9,0,0,798,160,1,0,0,0,799,
	800,7,15,0,0,800,801,7,1,0,0,801,802,7,8,0,0,802,803,7,16,0,0,803,162,1,
	0,0,0,804,805,7,8,0,0,805,806,7,1,0,0,806,807,7,16,0,0,807,808,7,6,0,0,
	808,809,7,4,0,0,809,810,7,14,0,0,810,811,7,0,0,0,811,812,7,11,0,0,812,813,
	7,6,0,0,813,164,1,0,0,0,814,815,7,15,0,0,815,816,7,13,0,0,816,817,7,6,0,
	0,817,818,7,13,0,0,818,166,1,0,0,0,819,820,7,13,0,0,820,821,7,16,0,0,821,
	822,7,4,0,0,822,823,7,8,0,0,823,824,7,1,0,0,824,832,7,7,0,0,825,826,7,11,
	0,0,826,827,7,0,0,0,827,828,7,2,0,0,828,829,7,6,0,0,829,830,7,1,0,0,830,
	832,7,0,0,0,831,819,1,0,0,0,831,825,1,0,0,0,832,168,1,0,0,0,833,834,7,8,
	0,0,834,835,7,20,0,0,835,836,7,21,0,0,836,837,7,10,0,0,837,838,7,6,0,0,
	838,839,7,20,0,0,839,840,7,6,0,0,840,841,7,1,0,0,841,842,7,16,0,0,842,843,
	7,0,0,0,843,844,7,16,0,0,844,845,7,8,0,0,845,846,7,9,0,0,846,847,7,1,0,
	0,847,170,1,0,0,0,848,849,7,16,0,0,849,850,7,4,0,0,850,851,7,15,0,0,851,
	862,7,6,0,0,852,853,7,18,0,0,853,854,7,6,0,0,854,855,7,4,0,0,855,856,7,
	2,0,0,856,857,7,0,0,0,857,858,7,2,0,0,858,859,7,6,0,0,859,860,7,4,0,0,860,
	862,7,9,0,0,861,848,1,0,0,0,861,852,1,0,0,0,862,172,1,0,0,0,863,864,7,14,
	0,0,864,865,7,0,0,0,865,866,7,10,0,0,866,867,7,13,0,0,867,874,7,6,0,0,868,
	869,7,14,0,0,869,870,7,0,0,0,870,871,7,10,0,0,871,872,7,13,0,0,872,874,
	7,9,0,0,873,863,1,0,0,0,873,868,1,0,0,0,874,174,1,0,0,0,875,876,7,19,0,
	0,876,877,7,4,0,0,877,878,7,8,0,0,878,879,7,16,0,0,879,896,7,6,0,0,880,
	881,7,6,0,0,881,882,7,13,0,0,882,883,7,11,0,0,883,884,7,4,0,0,884,885,7,
	8,0,0,885,886,7,5,0,0,886,887,7,8,0,0,887,896,7,4,0,0,888,889,7,20,0,0,
	889,890,7,9,0,0,890,891,7,13,0,0,891,892,7,16,0,0,892,893,7,4,0,0,893,894,
	7,0,0,0,894,896,7,4,0,0,895,875,1,0,0,0,895,880,1,0,0,0,895,888,1,0,0,0,
	896,176,1,0,0,0,897,898,7,4,0,0,898,899,7,6,0,0,899,900,7,0,0,0,900,906,
	7,2,0,0,901,902,7,10,0,0,902,903,7,6,0,0,903,904,7,6,0,0,904,906,7,4,0,
	0,905,897,1,0,0,0,905,901,1,0,0,0,906,178,1,0,0,0,907,908,7,23,0,0,908,
	909,1,0,0,0,909,910,6,89,0,0,910,180,1,0,0,0,911,912,5,47,0,0,912,913,5,
	47,0,0,913,917,1,0,0,0,914,916,8,24,0,0,915,914,1,0,0,0,916,919,1,0,0,0,
	917,915,1,0,0,0,917,918,1,0,0,0,918,920,1,0,0,0,919,917,1,0,0,0,920,921,
	6,90,0,0,921,182,1,0,0,0,922,926,5,35,0,0,923,925,8,24,0,0,924,923,1,0,
	0,0,925,928,1,0,0,0,926,924,1,0,0,0,926,927,1,0,0,0,927,929,1,0,0,0,928,
	926,1,0,0,0,929,930,6,91,0,0,930,184,1,0,0,0,931,935,7,25,0,0,932,934,7,
	26,0,0,933,932,1,0,0,0,934,937,1,0,0,0,935,933,1,0,0,0,935,936,1,0,0,0,
	936,186,1,0,0,0,937,935,1,0,0,0,938,944,5,39,0,0,939,940,5,39,0,0,940,943,
	5,39,0,0,941,943,8,27,0,0,942,939,1,0,0,0,942,941,1,0,0,0,943,946,1,0,0,
	0,944,942,1,0,0,0,944,945,1,0,0,0,945,947,1,0,0,0,946,944,1,0,0,0,947,959,
	5,39,0,0,948,954,5,34,0,0,949,950,5,34,0,0,950,953,5,34,0,0,951,953,8,28,
	0,0,952,949,1,0,0,0,952,951,1,0,0,0,953,956,1,0,0,0,954,952,1,0,0,0,954,
	955,1,0,0,0,955,957,1,0,0,0,956,954,1,0,0,0,957,959,5,34,0,0,958,938,1,
	0,0,0,958,948,1,0,0,0,959,188,1,0,0,0,960,962,2,48,57,0,961,960,1,0,0,0,
	962,963,1,0,0,0,963,961,1,0,0,0,963,964,1,0,0,0,964,190,1,0,0,0,965,967,
	2,48,57,0,966,965,1,0,0,0,967,968,1,0,0,0,968,966,1,0,0,0,968,969,1,0,0,
	0,969,982,1,0,0,0,970,972,5,46,0,0,971,973,2,48,57,0,972,971,1,0,0,0,973,
	974,1,0,0,0,974,972,1,0,0,0,974,975,1,0,0,0,975,977,1,0,0,0,976,978,3,193,
	96,0,977,976,1,0,0,0,977,978,1,0,0,0,978,980,1,0,0,0,979,970,1,0,0,0,979,
	980,1,0,0,0,980,983,1,0,0,0,981,983,3,193,96,0,982,979,1,0,0,0,982,981,
	1,0,0,0,983,192,1,0,0,0,984,986,7,6,0,0,985,987,7,29,0,0,986,985,1,0,0,
	0,986,987,1,0,0,0,987,989,1,0,0,0,988,990,2,48,57,0,989,988,1,0,0,0,990,
	991,1,0,0,0,991,989,1,0,0,0,991,992,1,0,0,0,992,194,1,0,0,0,53,0,199,233,
	250,261,275,312,322,345,373,388,397,423,429,447,468,482,524,558,571,590,
	606,643,652,675,696,711,725,736,751,758,763,831,861,873,895,905,917,926,
	935,942,944,952,954,958,963,968,974,977,979,982,986,991,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!StepCodeLexer.__ATN) {
			StepCodeLexer.__ATN = new ATNDeserializer().deserialize(StepCodeLexer._serializedATN);
		}

		return StepCodeLexer.__ATN;
	}


	static DecisionsToDFA = StepCodeLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}