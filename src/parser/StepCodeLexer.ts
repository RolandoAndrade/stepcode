// Generated from src/StepCode.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class StepCodeLexer extends Lexer {
	public static readonly AND = 1;
	public static readonly ARRAY = 2;
	public static readonly BEGIN = 3;
	public static readonly BOOLEAN = 4;
	public static readonly ENDCASE = 5;
	public static readonly CASE = 6;
	public static readonly CHAR = 7;
	public static readonly CHR = 8;
	public static readonly CONST = 9;
	public static readonly DIV = 10;
	public static readonly DO = 11;
	public static readonly DOWNTO = 12;
	public static readonly ELIF = 13;
	public static readonly ELSE = 14;
	public static readonly OTHERWISE = 15;
	public static readonly END = 16;
	public static readonly FILE = 17;
	public static readonly WITHSTEP = 18;
	public static readonly ENDFOR = 19;
	public static readonly FOR = 20;
	public static readonly FUNCTION = 21;
	public static readonly GOTO = 22;
	public static readonly ENDIF = 23;
	public static readonly IF = 24;
	public static readonly IN = 25;
	public static readonly INTEGER = 26;
	public static readonly LABEL = 27;
	public static readonly DIMENSION = 28;
	public static readonly MOD = 29;
	public static readonly NIL = 30;
	public static readonly NOT = 31;
	public static readonly OF = 32;
	public static readonly HACER = 33;
	public static readonly OR = 34;
	public static readonly PACKED = 35;
	public static readonly PROCEDURE = 36;
	public static readonly PROGRAM = 37;
	public static readonly ENDPROGRAM = 38;
	public static readonly BREAK = 39;
	public static readonly CONTINUE = 40;
	public static readonly RETURN = 41;
	public static readonly REAL = 42;
	public static readonly RECORD = 43;
	public static readonly REPEAT = 44;
	public static readonly SET = 45;
	public static readonly THEN = 46;
	public static readonly UNTIL = 47;
	public static readonly TO = 48;
	public static readonly TYPE = 49;
	public static readonly DEFINE = 50;
	public static readonly ENDWHILE = 51;
	public static readonly MIENTRASQUE = 52;
	public static readonly WHILE = 53;
	public static readonly WITH = 54;
	public static readonly PLUS = 55;
	public static readonly MINUS = 56;
	public static readonly POWER = 57;
	public static readonly STAR = 58;
	public static readonly SLASH = 59;
	public static readonly ASSIGN = 60;
	public static readonly COMMA = 61;
	public static readonly SEMI = 62;
	public static readonly COLON = 63;
	public static readonly EQUAL = 64;
	public static readonly NOT_EQUAL = 65;
	public static readonly LT = 66;
	public static readonly LE = 67;
	public static readonly GE = 68;
	public static readonly GT = 69;
	public static readonly LPAREN = 70;
	public static readonly RPAREN = 71;
	public static readonly LBRACK = 72;
	public static readonly LBRACK2 = 73;
	public static readonly RBRACK = 74;
	public static readonly RBRACK2 = 75;
	public static readonly POINTER = 76;
	public static readonly AT = 77;
	public static readonly DOT = 78;
	public static readonly DOTDOT = 79;
	public static readonly LCURLY = 80;
	public static readonly RCURLY = 81;
	public static readonly AS = 82;
	public static readonly UNIT = 83;
	public static readonly INTERFACE = 84;
	public static readonly USES = 85;
	public static readonly STRING = 86;
	public static readonly IMPLEMENTATION = 87;
	public static readonly TRUE = 88;
	public static readonly FALSE = 89;
	public static readonly WRITE = 90;
	public static readonly READ = 91;
	public static readonly WS = 92;
	public static readonly COMMENT_1 = 93;
	public static readonly COMMENT_2 = 94;
	public static readonly IDENT = 95;
	public static readonly STRING_LITERAL = 96;
	public static readonly NUM_INT = 97;
	public static readonly NUM_REAL = 98;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, null, 
                                                            "'ARRAY'", "'BEGIN'", 
                                                            null, null, 
                                                            null, null, 
                                                            "'CHR'", "'CONST'", 
                                                            "'DIV'", "'DO'", 
                                                            "'DOWNTO'", 
                                                            null, null, 
                                                            null, "'END'", 
                                                            "'FILE'", null, 
                                                            null, null, 
                                                            "'FUNCTION'", 
                                                            "'GOTO'", null, 
                                                            null, "'IN'", 
                                                            null, "'LABEL'", 
                                                            "'DIMENSION'", 
                                                            "'MOD'", "'NIL'", 
                                                            null, "'OF'", 
                                                            "'HACER'", null, 
                                                            "'PACKED'", 
                                                            "'PROCEDURE'", 
                                                            null, null, 
                                                            null, null, 
                                                            null, "'REAL'", 
                                                            "'RECORD'", 
                                                            null, "'SET'", 
                                                            null, null, 
                                                            null, "'TYPE'", 
                                                            null, null, 
                                                            "'MIENTRAS QUE'", 
                                                            null, "'WITH'", 
                                                            "'+'", "'-'", 
                                                            null, "'*'", 
                                                            "'/'", null, 
                                                            "','", "';'", 
                                                            "':'", "'='", 
                                                            null, "'<'", 
                                                            null, null, 
                                                            "'>'", "'('", 
                                                            "')'", "'['", 
                                                            "'(.'", "']'", 
                                                            "'.)'", "'^'", 
                                                            "'@'", "'.'", 
                                                            "'..'", "'{'", 
                                                            "'}'", "'COMO'", 
                                                            "'UNIT'", "'INTERFACE'", 
                                                            "'USES'", null, 
                                                            "'IMPLEMENTATION'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "AND", 
                                                             "ARRAY", "BEGIN", 
                                                             "BOOLEAN", 
                                                             "ENDCASE", 
                                                             "CASE", "CHAR", 
                                                             "CHR", "CONST", 
                                                             "DIV", "DO", 
                                                             "DOWNTO", "ELIF", 
                                                             "ELSE", "OTHERWISE", 
                                                             "END", "FILE", 
                                                             "WITHSTEP", 
                                                             "ENDFOR", "FOR", 
                                                             "FUNCTION", 
                                                             "GOTO", "ENDIF", 
                                                             "IF", "IN", 
                                                             "INTEGER", 
                                                             "LABEL", "DIMENSION", 
                                                             "MOD", "NIL", 
                                                             "NOT", "OF", 
                                                             "HACER", "OR", 
                                                             "PACKED", "PROCEDURE", 
                                                             "PROGRAM", 
                                                             "ENDPROGRAM", 
                                                             "BREAK", "CONTINUE", 
                                                             "RETURN", "REAL", 
                                                             "RECORD", "REPEAT", 
                                                             "SET", "THEN", 
                                                             "UNTIL", "TO", 
                                                             "TYPE", "DEFINE", 
                                                             "ENDWHILE", 
                                                             "MIENTRASQUE", 
                                                             "WHILE", "WITH", 
                                                             "PLUS", "MINUS", 
                                                             "POWER", "STAR", 
                                                             "SLASH", "ASSIGN", 
                                                             "COMMA", "SEMI", 
                                                             "COLON", "EQUAL", 
                                                             "NOT_EQUAL", 
                                                             "LT", "LE", 
                                                             "GE", "GT", 
                                                             "LPAREN", "RPAREN", 
                                                             "LBRACK", "LBRACK2", 
                                                             "RBRACK", "RBRACK2", 
                                                             "POINTER", 
                                                             "AT", "DOT", 
                                                             "DOTDOT", "LCURLY", 
                                                             "RCURLY", "AS", 
                                                             "UNIT", "INTERFACE", 
                                                             "USES", "STRING", 
                                                             "IMPLEMENTATION", 
                                                             "TRUE", "FALSE", 
                                                             "WRITE", "READ", 
                                                             "WS", "COMMENT_1", 
                                                             "COMMENT_2", 
                                                             "IDENT", "STRING_LITERAL", 
                                                             "NUM_INT", 
                                                             "NUM_REAL" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"AND", "ARRAY", "BEGIN", "BOOLEAN", "ENDCASE", "CASE", "CHAR", "CHR", 
		"CONST", "DIV", "DO", "DOWNTO", "ELIF", "ELSE", "OTHERWISE", "END", "FILE", 
		"WITHSTEP", "ENDFOR", "FOR", "FUNCTION", "GOTO", "ENDIF", "IF", "IN", 
		"INTEGER", "LABEL", "DIMENSION", "MOD", "NIL", "NOT", "OF", "HACER", "OR", 
		"PACKED", "PROCEDURE", "PROGRAM", "ENDPROGRAM", "BREAK", "CONTINUE", "RETURN", 
		"REAL", "RECORD", "REPEAT", "SET", "THEN", "UNTIL", "TO", "TYPE", "DEFINE", 
		"ENDWHILE", "MIENTRASQUE", "WHILE", "WITH", "PLUS", "MINUS", "POWER", 
		"STAR", "SLASH", "ASSIGN", "COMMA", "SEMI", "COLON", "EQUAL", "NOT_EQUAL", 
		"LT", "LE", "GE", "GT", "LPAREN", "RPAREN", "LBRACK", "LBRACK2", "RBRACK", 
		"RBRACK2", "POINTER", "AT", "DOT", "DOTDOT", "LCURLY", "RCURLY", "AS", 
		"UNIT", "INTERFACE", "USES", "STRING", "IMPLEMENTATION", "TRUE", "FALSE", 
		"WRITE", "READ", "WS", "COMMENT_1", "COMMENT_2", "IDENT", "STRING_LITERAL", 
		"NUM_INT", "NUM_REAL", "EXPONENT",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, StepCodeLexer._ATN, StepCodeLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "StepCode.g4"; }

	public get literalNames(): (string | null)[] { return StepCodeLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return StepCodeLexer.symbolicNames; }
	public get ruleNames(): string[] { return StepCodeLexer.ruleNames; }

	public get serializedATN(): number[] { return StepCodeLexer._serializedATN; }

	public get channelNames(): string[] { return StepCodeLexer.channelNames; }

	public get modeNames(): string[] { return StepCodeLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,98,1038,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,
	7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,
	74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,
	2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,
	89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,
	7,96,2,97,7,97,2,98,7,98,1,0,1,0,1,0,1,0,3,0,204,8,0,1,1,1,1,1,1,1,1,1,
	1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
	3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,238,8,3,1,4,1,4,1,4,1,4,1,4,1,
	4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,255,8,4,1,5,1,5,1,5,1,5,1,5,1,
	5,1,5,1,5,1,5,3,5,266,8,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
	6,3,6,280,8,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,
	10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,
	1,12,1,12,1,12,1,12,1,12,1,12,3,12,317,8,12,1,13,1,13,1,13,1,13,1,13,1,
	13,1,13,1,13,3,13,327,8,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
	1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,3,14,350,8,
	14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,
	1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,3,17,378,8,
	17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,3,18,
	393,8,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,3,19,402,8,19,1,20,1,20,1,20,
	1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,
	22,1,22,1,22,1,22,1,22,1,22,1,22,3,22,428,8,22,1,23,1,23,1,23,1,23,3,23,
	434,8,23,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,
	25,1,25,1,25,1,25,3,25,452,8,25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,
	1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,
	29,1,29,1,30,1,30,1,30,1,30,1,30,3,30,483,8,30,1,31,1,31,1,31,1,32,1,32,
	1,32,1,32,1,32,1,32,1,33,1,33,1,33,3,33,497,8,33,1,34,1,34,1,34,1,34,1,
	34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,
	1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,
	36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,539,8,36,1,37,1,37,1,37,1,37,1,37,
	1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,
	37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,3,37,573,
	8,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,3,38,586,8,
	38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
	1,39,1,39,1,39,3,39,605,8,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,
	40,1,40,1,40,1,40,1,40,1,40,3,40,621,8,40,1,41,1,41,1,41,1,41,1,41,1,42,
	1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,
	43,1,43,1,43,1,43,1,43,3,43,648,8,43,1,44,1,44,1,44,1,44,1,45,1,45,1,45,
	1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,3,45,666,8,45,1,46,1,46,1,
	46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,3,46,682,8,46,
	1,47,1,47,1,47,1,47,1,47,1,47,1,47,3,47,691,8,47,1,48,1,48,1,48,1,48,1,
	48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,3,49,708,8,49,1,50,
	1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,
	50,1,50,1,50,1,50,3,50,729,8,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,
	1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,
	52,1,52,1,52,1,52,3,52,757,8,52,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,55,
	1,55,1,56,1,56,1,56,3,56,771,8,56,1,57,1,57,1,58,1,58,1,59,1,59,1,59,1,
	59,1,59,3,59,782,8,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,
	1,64,1,64,1,64,3,64,797,8,64,1,65,1,65,1,66,1,66,1,66,3,66,804,8,66,1,67,
	1,67,1,67,3,67,809,8,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,
	72,1,72,1,73,1,73,1,74,1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,1,78,1,78,
	1,78,1,79,1,79,1,80,1,80,1,81,1,81,1,81,1,81,1,81,1,82,1,82,1,82,1,82,1,
	82,1,83,1,83,1,83,1,83,1,83,1,83,1,83,1,83,1,83,1,83,1,84,1,84,1,84,1,84,
	1,84,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,3,85,877,
	8,85,1,86,1,86,1,86,1,86,1,86,1,86,1,86,1,86,1,86,1,86,1,86,1,86,1,86,1,
	86,1,86,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,
	3,87,907,8,87,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,3,88,919,
	8,88,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,
	89,1,89,1,89,1,89,1,89,1,89,1,89,3,89,941,8,89,1,90,1,90,1,90,1,90,1,90,
	1,90,1,90,1,90,3,90,951,8,90,1,91,1,91,1,91,1,91,1,92,1,92,1,92,1,92,5,
	92,961,8,92,10,92,12,92,964,9,92,1,92,1,92,1,93,1,93,5,93,970,8,93,10,93,
	12,93,973,9,93,1,93,1,93,1,94,1,94,5,94,979,8,94,10,94,12,94,982,9,94,1,
	95,1,95,1,95,1,95,5,95,988,8,95,10,95,12,95,991,9,95,1,95,1,95,1,95,1,95,
	1,95,5,95,998,8,95,10,95,12,95,1001,9,95,1,95,3,95,1004,8,95,1,96,4,96,
	1007,8,96,11,96,12,96,1008,1,97,4,97,1012,8,97,11,97,12,97,1013,1,97,1,
	97,4,97,1018,8,97,11,97,12,97,1019,1,97,3,97,1023,8,97,3,97,1025,8,97,1,
	97,3,97,1028,8,97,1,98,1,98,3,98,1032,8,98,1,98,4,98,1035,8,98,11,98,12,
	98,1036,0,0,99,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
	25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
	49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,
	73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,
	97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,
	59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,
	139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,159,
	80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,88,177,89,179,90,
	181,91,183,92,185,93,187,94,189,95,191,96,193,97,195,98,197,0,1,0,31,2,
	0,65,65,97,97,2,0,78,78,110,110,2,0,68,68,100,100,2,0,89,89,121,121,2,0,
	82,82,114,114,2,0,66,66,98,98,2,0,69,69,101,101,2,0,71,71,103,103,2,0,73,
	73,105,105,2,0,79,79,111,111,2,0,76,76,108,108,2,0,67,67,99,99,2,0,195,
	195,227,227,2,0,83,83,115,115,2,0,70,70,102,102,2,0,85,85,117,117,2,0,84,
	84,116,116,2,0,72,72,104,104,2,0,86,86,118,118,2,0,87,87,119,119,2,0,77,
	77,109,109,2,0,80,80,112,112,2,0,75,75,107,107,2,0,81,81,113,113,3,0,9,
	10,13,13,32,32,2,0,10,10,13,13,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,
	122,1,0,39,39,1,0,34,34,2,0,43,43,45,45,1096,0,1,1,0,0,0,0,3,1,0,0,0,0,
	5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,
	0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
	1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
	0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
	1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
	0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
	1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,
	0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,
	1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,
	0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,
	0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,
	0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,
	135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,
	1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,
	0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,
	0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,
	0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,
	0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,1,
	203,1,0,0,0,3,205,1,0,0,0,5,211,1,0,0,0,7,237,1,0,0,0,9,254,1,0,0,0,11,
	265,1,0,0,0,13,279,1,0,0,0,15,281,1,0,0,0,17,285,1,0,0,0,19,291,1,0,0,0,
	21,295,1,0,0,0,23,298,1,0,0,0,25,316,1,0,0,0,27,326,1,0,0,0,29,349,1,0,
	0,0,31,351,1,0,0,0,33,355,1,0,0,0,35,377,1,0,0,0,37,392,1,0,0,0,39,401,
	1,0,0,0,41,403,1,0,0,0,43,412,1,0,0,0,45,427,1,0,0,0,47,433,1,0,0,0,49,
	435,1,0,0,0,51,451,1,0,0,0,53,453,1,0,0,0,55,459,1,0,0,0,57,469,1,0,0,0,
	59,473,1,0,0,0,61,482,1,0,0,0,63,484,1,0,0,0,65,487,1,0,0,0,67,496,1,0,
	0,0,69,498,1,0,0,0,71,505,1,0,0,0,73,538,1,0,0,0,75,572,1,0,0,0,77,585,
	1,0,0,0,79,604,1,0,0,0,81,620,1,0,0,0,83,622,1,0,0,0,85,627,1,0,0,0,87,
	647,1,0,0,0,89,649,1,0,0,0,91,665,1,0,0,0,93,681,1,0,0,0,95,690,1,0,0,0,
	97,692,1,0,0,0,99,707,1,0,0,0,101,728,1,0,0,0,103,730,1,0,0,0,105,756,1,
	0,0,0,107,758,1,0,0,0,109,763,1,0,0,0,111,765,1,0,0,0,113,770,1,0,0,0,115,
	772,1,0,0,0,117,774,1,0,0,0,119,781,1,0,0,0,121,783,1,0,0,0,123,785,1,0,
	0,0,125,787,1,0,0,0,127,789,1,0,0,0,129,796,1,0,0,0,131,798,1,0,0,0,133,
	803,1,0,0,0,135,808,1,0,0,0,137,810,1,0,0,0,139,812,1,0,0,0,141,814,1,0,
	0,0,143,816,1,0,0,0,145,818,1,0,0,0,147,821,1,0,0,0,149,823,1,0,0,0,151,
	826,1,0,0,0,153,828,1,0,0,0,155,830,1,0,0,0,157,832,1,0,0,0,159,835,1,0,
	0,0,161,837,1,0,0,0,163,839,1,0,0,0,165,844,1,0,0,0,167,849,1,0,0,0,169,
	859,1,0,0,0,171,876,1,0,0,0,173,878,1,0,0,0,175,906,1,0,0,0,177,918,1,0,
	0,0,179,940,1,0,0,0,181,950,1,0,0,0,183,952,1,0,0,0,185,956,1,0,0,0,187,
	967,1,0,0,0,189,976,1,0,0,0,191,1003,1,0,0,0,193,1006,1,0,0,0,195,1011,
	1,0,0,0,197,1029,1,0,0,0,199,200,7,0,0,0,200,201,7,1,0,0,201,204,7,2,0,
	0,202,204,7,3,0,0,203,199,1,0,0,0,203,202,1,0,0,0,204,2,1,0,0,0,205,206,
	7,0,0,0,206,207,7,4,0,0,207,208,7,4,0,0,208,209,7,0,0,0,209,210,7,3,0,0,
	210,4,1,0,0,0,211,212,7,5,0,0,212,213,7,6,0,0,213,214,7,7,0,0,214,215,7,
	8,0,0,215,216,7,1,0,0,216,6,1,0,0,0,217,218,7,5,0,0,218,219,7,9,0,0,219,
	220,7,9,0,0,220,221,7,10,0,0,221,222,7,6,0,0,222,223,7,0,0,0,223,238,7,
	1,0,0,224,225,7,10,0,0,225,226,7,9,0,0,226,227,7,7,0,0,227,228,7,8,0,0,
	228,229,7,11,0,0,229,238,7,9,0,0,230,231,7,10,0,0,231,232,7,12,0,0,232,
	233,5,8220,0,0,233,234,7,7,0,0,234,235,7,8,0,0,235,236,7,11,0,0,236,238,
	7,9,0,0,237,217,1,0,0,0,237,224,1,0,0,0,237,230,1,0,0,0,238,8,1,0,0,0,239,
	240,7,6,0,0,240,241,7,1,0,0,241,242,7,2,0,0,242,243,7,11,0,0,243,244,7,
	0,0,0,244,245,7,13,0,0,245,255,7,6,0,0,246,247,7,14,0,0,247,248,7,8,0,0,
	248,249,7,1,0,0,249,250,7,13,0,0,250,251,7,6,0,0,251,252,7,7,0,0,252,253,
	7,15,0,0,253,255,7,1,0,0,254,239,1,0,0,0,254,246,1,0,0,0,255,10,1,0,0,0,
	256,257,7,13,0,0,257,258,7,6,0,0,258,259,7,7,0,0,259,260,7,15,0,0,260,266,
	7,1,0,0,261,262,7,11,0,0,262,263,7,0,0,0,263,264,7,13,0,0,264,266,7,6,0,
	0,265,256,1,0,0,0,265,261,1,0,0,0,266,12,1,0,0,0,267,268,7,11,0,0,268,269,
	7,0,0,0,269,270,7,4,0,0,270,271,7,0,0,0,271,272,7,11,0,0,272,273,7,16,0,
	0,273,274,7,6,0,0,274,280,7,4,0,0,275,276,7,11,0,0,276,277,7,17,0,0,277,
	278,7,0,0,0,278,280,7,4,0,0,279,267,1,0,0,0,279,275,1,0,0,0,280,14,1,0,
	0,0,281,282,7,11,0,0,282,283,7,17,0,0,283,284,7,4,0,0,284,16,1,0,0,0,285,
	286,7,11,0,0,286,287,7,9,0,0,287,288,7,1,0,0,288,289,7,13,0,0,289,290,7,
	16,0,0,290,18,1,0,0,0,291,292,7,2,0,0,292,293,7,8,0,0,293,294,7,18,0,0,
	294,20,1,0,0,0,295,296,7,2,0,0,296,297,7,9,0,0,297,22,1,0,0,0,298,299,7,
	2,0,0,299,300,7,9,0,0,300,301,7,19,0,0,301,302,7,1,0,0,302,303,7,16,0,0,
	303,304,7,9,0,0,304,24,1,0,0,0,305,306,7,6,0,0,306,307,7,10,0,0,307,308,
	7,8,0,0,308,317,7,14,0,0,309,310,7,13,0,0,310,311,7,8,0,0,311,312,7,1,0,
	0,312,313,7,9,0,0,313,314,5,32,0,0,314,315,7,13,0,0,315,317,7,8,0,0,316,
	305,1,0,0,0,316,309,1,0,0,0,317,26,1,0,0,0,318,319,7,6,0,0,319,320,7,10,
	0,0,320,321,7,13,0,0,321,327,7,6,0,0,322,323,7,13,0,0,323,324,7,8,0,0,324,
	325,7,1,0,0,325,327,7,9,0,0,326,318,1,0,0,0,326,322,1,0,0,0,327,28,1,0,
	0,0,328,329,7,9,0,0,329,330,7,16,0,0,330,331,7,17,0,0,331,332,7,6,0,0,332,
	333,7,4,0,0,333,334,7,19,0,0,334,335,7,8,0,0,335,336,7,13,0,0,336,350,7,
	6,0,0,337,338,7,2,0,0,338,339,7,6,0,0,339,340,5,32,0,0,340,341,7,9,0,0,
	341,342,7,16,0,0,342,343,7,4,0,0,343,344,7,9,0,0,344,345,5,32,0,0,345,346,
	7,20,0,0,346,347,7,9,0,0,347,348,7,2,0,0,348,350,7,9,0,0,349,328,1,0,0,
	0,349,337,1,0,0,0,350,30,1,0,0,0,351,352,7,6,0,0,352,353,7,1,0,0,353,354,
	7,2,0,0,354,32,1,0,0,0,355,356,7,14,0,0,356,357,7,8,0,0,357,358,7,10,0,
	0,358,359,7,6,0,0,359,34,1,0,0,0,360,361,7,19,0,0,361,362,7,8,0,0,362,363,
	7,16,0,0,363,364,7,17,0,0,364,365,5,32,0,0,365,366,7,13,0,0,366,367,7,16,
	0,0,367,368,7,6,0,0,368,378,7,21,0,0,369,370,7,11,0,0,370,371,7,9,0,0,371,
	372,7,1,0,0,372,373,5,32,0,0,373,374,7,21,0,0,374,375,7,0,0,0,375,376,7,
	13,0,0,376,378,7,9,0,0,377,360,1,0,0,0,377,369,1,0,0,0,378,36,1,0,0,0,379,
	380,7,6,0,0,380,381,7,1,0,0,381,382,7,2,0,0,382,383,7,14,0,0,383,384,7,
	9,0,0,384,393,7,4,0,0,385,386,7,14,0,0,386,387,7,8,0,0,387,388,7,1,0,0,
	388,389,7,21,0,0,389,390,7,0,0,0,390,391,7,4,0,0,391,393,7,0,0,0,392,379,
	1,0,0,0,392,385,1,0,0,0,393,38,1,0,0,0,394,395,7,14,0,0,395,396,7,9,0,0,
	396,402,7,4,0,0,397,398,7,21,0,0,398,399,7,0,0,0,399,400,7,4,0,0,400,402,
	7,0,0,0,401,394,1,0,0,0,401,397,1,0,0,0,402,40,1,0,0,0,403,404,7,14,0,0,
	404,405,7,15,0,0,405,406,7,1,0,0,406,407,7,11,0,0,407,408,7,16,0,0,408,
	409,7,8,0,0,409,410,7,9,0,0,410,411,7,1,0,0,411,42,1,0,0,0,412,413,7,7,
	0,0,413,414,7,9,0,0,414,415,7,16,0,0,415,416,7,9,0,0,416,44,1,0,0,0,417,
	418,7,6,0,0,418,419,7,1,0,0,419,420,7,2,0,0,420,421,7,8,0,0,421,428,7,14,
	0,0,422,423,7,14,0,0,423,424,7,8,0,0,424,425,7,1,0,0,425,426,7,13,0,0,426,
	428,7,8,0,0,427,417,1,0,0,0,427,422,1,0,0,0,428,46,1,0,0,0,429,430,7,13,
	0,0,430,434,7,8,0,0,431,432,7,8,0,0,432,434,7,14,0,0,433,429,1,0,0,0,433,
	431,1,0,0,0,434,48,1,0,0,0,435,436,7,8,0,0,436,437,7,1,0,0,437,50,1,0,0,
	0,438,439,7,6,0,0,439,440,7,1,0,0,440,441,7,16,0,0,441,442,7,6,0,0,442,
	443,7,4,0,0,443,452,7,9,0,0,444,445,7,8,0,0,445,446,7,1,0,0,446,447,7,16,
	0,0,447,448,7,6,0,0,448,449,7,7,0,0,449,450,7,6,0,0,450,452,7,4,0,0,451,
	438,1,0,0,0,451,444,1,0,0,0,452,52,1,0,0,0,453,454,7,10,0,0,454,455,7,0,
	0,0,455,456,7,5,0,0,456,457,7,6,0,0,457,458,7,10,0,0,458,54,1,0,0,0,459,
	460,7,2,0,0,460,461,7,8,0,0,461,462,7,20,0,0,462,463,7,6,0,0,463,464,7,
	1,0,0,464,465,7,13,0,0,465,466,7,8,0,0,466,467,7,9,0,0,467,468,7,1,0,0,
	468,56,1,0,0,0,469,470,7,20,0,0,470,471,7,9,0,0,471,472,7,2,0,0,472,58,
	1,0,0,0,473,474,7,1,0,0,474,475,7,8,0,0,475,476,7,10,0,0,476,60,1,0,0,0,
	477,478,7,1,0,0,478,479,7,9,0,0,479,483,7,16,0,0,480,481,7,1,0,0,481,483,
	7,9,0,0,482,477,1,0,0,0,482,480,1,0,0,0,483,62,1,0,0,0,484,485,7,9,0,0,
	485,486,7,14,0,0,486,64,1,0,0,0,487,488,7,17,0,0,488,489,7,0,0,0,489,490,
	7,11,0,0,490,491,7,6,0,0,491,492,7,4,0,0,492,66,1,0,0,0,493,494,7,9,0,0,
	494,497,7,4,0,0,495,497,7,9,0,0,496,493,1,0,0,0,496,495,1,0,0,0,497,68,
	1,0,0,0,498,499,7,21,0,0,499,500,7,0,0,0,500,501,7,11,0,0,501,502,7,22,
	0,0,502,503,7,6,0,0,503,504,7,2,0,0,504,70,1,0,0,0,505,506,7,21,0,0,506,
	507,7,4,0,0,507,508,7,9,0,0,508,509,7,11,0,0,509,510,7,6,0,0,510,511,7,
	2,0,0,511,512,7,15,0,0,512,513,7,4,0,0,513,514,7,6,0,0,514,72,1,0,0,0,515,
	516,7,21,0,0,516,517,7,4,0,0,517,518,7,9,0,0,518,519,7,11,0,0,519,520,7,
	6,0,0,520,521,7,13,0,0,521,539,7,9,0,0,522,523,7,0,0,0,523,524,7,10,0,0,
	524,525,7,7,0,0,525,526,7,9,0,0,526,527,7,4,0,0,527,528,7,8,0,0,528,529,
	7,16,0,0,529,530,7,20,0,0,530,539,7,9,0,0,531,532,7,21,0,0,532,533,7,4,
	0,0,533,534,7,9,0,0,534,535,7,7,0,0,535,536,7,4,0,0,536,537,7,0,0,0,537,
	539,7,20,0,0,538,515,1,0,0,0,538,522,1,0,0,0,538,531,1,0,0,0,539,74,1,0,
	0,0,540,541,7,14,0,0,541,542,7,8,0,0,542,543,7,1,0,0,543,544,7,21,0,0,544,
	545,7,4,0,0,545,546,7,9,0,0,546,547,7,11,0,0,547,548,7,6,0,0,548,549,7,
	13,0,0,549,573,7,9,0,0,550,551,7,14,0,0,551,552,7,8,0,0,552,553,7,1,0,0,
	553,554,7,0,0,0,554,555,7,10,0,0,555,556,7,7,0,0,556,557,7,9,0,0,557,558,
	7,4,0,0,558,559,7,8,0,0,559,560,7,16,0,0,560,561,7,20,0,0,561,573,7,9,0,
	0,562,563,7,6,0,0,563,564,7,1,0,0,564,565,7,2,0,0,565,566,7,21,0,0,566,
	567,7,4,0,0,567,568,7,9,0,0,568,569,7,7,0,0,569,570,7,4,0,0,570,571,7,0,
	0,0,571,573,7,20,0,0,572,540,1,0,0,0,572,550,1,0,0,0,572,562,1,0,0,0,573,
	76,1,0,0,0,574,575,7,5,0,0,575,576,7,4,0,0,576,577,7,6,0,0,577,578,7,0,
	0,0,578,586,7,22,0,0,579,580,7,4,0,0,580,581,7,9,0,0,581,582,7,20,0,0,582,
	583,7,21,0,0,583,584,7,6,0,0,584,586,7,4,0,0,585,574,1,0,0,0,585,579,1,
	0,0,0,586,78,1,0,0,0,587,588,7,11,0,0,588,589,7,9,0,0,589,590,7,1,0,0,590,
	591,7,16,0,0,591,592,7,8,0,0,592,593,7,1,0,0,593,594,7,15,0,0,594,605,7,
	6,0,0,595,596,7,11,0,0,596,597,7,9,0,0,597,598,7,1,0,0,598,599,7,16,0,0,
	599,600,7,8,0,0,600,601,7,1,0,0,601,602,7,15,0,0,602,603,7,0,0,0,603,605,
	7,4,0,0,604,587,1,0,0,0,604,595,1,0,0,0,605,80,1,0,0,0,606,607,7,4,0,0,
	607,608,7,6,0,0,608,609,7,16,0,0,609,610,7,15,0,0,610,611,7,4,0,0,611,621,
	7,1,0,0,612,613,7,4,0,0,613,614,7,6,0,0,614,615,7,7,0,0,615,616,7,4,0,0,
	616,617,7,6,0,0,617,618,7,13,0,0,618,619,7,0,0,0,619,621,7,4,0,0,620,606,
	1,0,0,0,620,612,1,0,0,0,621,82,1,0,0,0,622,623,7,4,0,0,623,624,7,6,0,0,
	624,625,7,0,0,0,625,626,7,10,0,0,626,84,1,0,0,0,627,628,7,4,0,0,628,629,
	7,6,0,0,629,630,7,11,0,0,630,631,7,9,0,0,631,632,7,4,0,0,632,633,7,2,0,
	0,633,86,1,0,0,0,634,635,7,4,0,0,635,636,7,6,0,0,636,637,7,21,0,0,637,638,
	7,6,0,0,638,639,7,0,0,0,639,648,7,16,0,0,640,641,7,4,0,0,641,642,7,6,0,
	0,642,643,7,21,0,0,643,644,7,6,0,0,644,645,7,16,0,0,645,646,7,8,0,0,646,
	648,7,4,0,0,647,634,1,0,0,0,647,640,1,0,0,0,648,88,1,0,0,0,649,650,7,13,
	0,0,650,651,7,6,0,0,651,652,7,16,0,0,652,90,1,0,0,0,653,654,7,16,0,0,654,
	655,7,17,0,0,655,656,7,6,0,0,656,666,7,1,0,0,657,658,7,6,0,0,658,659,7,
	1,0,0,659,660,7,16,0,0,660,661,7,9,0,0,661,662,7,1,0,0,662,663,7,11,0,0,
	663,664,7,6,0,0,664,666,7,13,0,0,665,653,1,0,0,0,665,657,1,0,0,0,666,92,
	1,0,0,0,667,668,7,15,0,0,668,669,7,1,0,0,669,670,7,16,0,0,670,671,7,8,0,
	0,671,682,7,10,0,0,672,673,7,17,0,0,673,674,7,0,0,0,674,675,7,13,0,0,675,
	676,7,16,0,0,676,677,7,0,0,0,677,678,5,32,0,0,678,679,7,23,0,0,679,680,
	7,15,0,0,680,682,7,6,0,0,681,667,1,0,0,0,681,672,1,0,0,0,682,94,1,0,0,0,
	683,684,7,16,0,0,684,691,7,9,0,0,685,686,7,17,0,0,686,687,7,0,0,0,687,688,
	7,13,0,0,688,689,7,16,0,0,689,691,7,0,0,0,690,683,1,0,0,0,690,685,1,0,0,
	0,691,96,1,0,0,0,692,693,7,16,0,0,693,694,7,3,0,0,694,695,7,21,0,0,695,
	696,7,6,0,0,696,98,1,0,0,0,697,698,7,2,0,0,698,699,7,6,0,0,699,700,7,14,
	0,0,700,701,7,8,0,0,701,702,7,1,0,0,702,703,7,8,0,0,703,708,7,4,0,0,704,
	705,7,18,0,0,705,706,7,0,0,0,706,708,7,4,0,0,707,697,1,0,0,0,707,704,1,
	0,0,0,708,100,1,0,0,0,709,710,7,6,0,0,710,711,7,1,0,0,711,712,7,2,0,0,712,
	713,7,19,0,0,713,714,7,17,0,0,714,715,7,8,0,0,715,716,7,10,0,0,716,729,
	7,6,0,0,717,718,7,14,0,0,718,719,7,8,0,0,719,720,7,1,0,0,720,721,7,20,0,
	0,721,722,7,8,0,0,722,723,7,6,0,0,723,724,7,1,0,0,724,725,7,16,0,0,725,
	726,7,4,0,0,726,727,7,0,0,0,727,729,7,13,0,0,728,709,1,0,0,0,728,717,1,
	0,0,0,729,102,1,0,0,0,730,731,7,20,0,0,731,732,7,8,0,0,732,733,7,6,0,0,
	733,734,7,1,0,0,734,735,7,16,0,0,735,736,7,4,0,0,736,737,7,0,0,0,737,738,
	7,13,0,0,738,739,5,32,0,0,739,740,7,23,0,0,740,741,7,15,0,0,741,742,7,6,
	0,0,742,104,1,0,0,0,743,744,7,19,0,0,744,745,7,17,0,0,745,746,7,8,0,0,746,
	747,7,10,0,0,747,757,7,6,0,0,748,749,7,20,0,0,749,750,7,8,0,0,750,751,7,
	6,0,0,751,752,7,1,0,0,752,753,7,16,0,0,753,754,7,4,0,0,754,755,7,0,0,0,
	755,757,7,13,0,0,756,743,1,0,0,0,756,748,1,0,0,0,757,106,1,0,0,0,758,759,
	7,19,0,0,759,760,7,8,0,0,760,761,7,16,0,0,761,762,7,17,0,0,762,108,1,0,
	0,0,763,764,5,43,0,0,764,110,1,0,0,0,765,766,5,45,0,0,766,112,1,0,0,0,767,
	768,5,42,0,0,768,771,5,42,0,0,769,771,5,94,0,0,770,767,1,0,0,0,770,769,
	1,0,0,0,771,114,1,0,0,0,772,773,5,42,0,0,773,116,1,0,0,0,774,775,5,47,0,
	0,775,118,1,0,0,0,776,777,5,58,0,0,777,782,5,61,0,0,778,779,5,60,0,0,779,
	782,5,45,0,0,780,782,5,8592,0,0,781,776,1,0,0,0,781,778,1,0,0,0,781,780,
	1,0,0,0,782,120,1,0,0,0,783,784,5,44,0,0,784,122,1,0,0,0,785,786,5,59,0,
	0,786,124,1,0,0,0,787,788,5,58,0,0,788,126,1,0,0,0,789,790,5,61,0,0,790,
	128,1,0,0,0,791,792,5,60,0,0,792,797,5,62,0,0,793,794,5,33,0,0,794,797,
	5,61,0,0,795,797,5,8800,0,0,796,791,1,0,0,0,796,793,1,0,0,0,796,795,1,0,
	0,0,797,130,1,0,0,0,798,799,5,60,0,0,799,132,1,0,0,0,800,801,5,60,0,0,801,
	804,5,61,0,0,802,804,5,8804,0,0,803,800,1,0,0,0,803,802,1,0,0,0,804,134,
	1,0,0,0,805,806,5,62,0,0,806,809,5,61,0,0,807,809,5,8805,0,0,808,805,1,
	0,0,0,808,807,1,0,0,0,809,136,1,0,0,0,810,811,5,62,0,0,811,138,1,0,0,0,
	812,813,5,40,0,0,813,140,1,0,0,0,814,815,5,41,0,0,815,142,1,0,0,0,816,817,
	5,91,0,0,817,144,1,0,0,0,818,819,5,40,0,0,819,820,5,46,0,0,820,146,1,0,
	0,0,821,822,5,93,0,0,822,148,1,0,0,0,823,824,5,46,0,0,824,825,5,41,0,0,
	825,150,1,0,0,0,826,827,5,94,0,0,827,152,1,0,0,0,828,829,5,64,0,0,829,154,
	1,0,0,0,830,831,5,46,0,0,831,156,1,0,0,0,832,833,5,46,0,0,833,834,5,46,
	0,0,834,158,1,0,0,0,835,836,5,123,0,0,836,160,1,0,0,0,837,838,5,125,0,0,
	838,162,1,0,0,0,839,840,7,11,0,0,840,841,7,9,0,0,841,842,7,20,0,0,842,843,
	7,9,0,0,843,164,1,0,0,0,844,845,7,15,0,0,845,846,7,1,0,0,846,847,7,8,0,
	0,847,848,7,16,0,0,848,166,1,0,0,0,849,850,7,8,0,0,850,851,7,1,0,0,851,
	852,7,16,0,0,852,853,7,6,0,0,853,854,7,4,0,0,854,855,7,14,0,0,855,856,7,
	0,0,0,856,857,7,11,0,0,857,858,7,6,0,0,858,168,1,0,0,0,859,860,7,15,0,0,
	860,861,7,13,0,0,861,862,7,6,0,0,862,863,7,13,0,0,863,170,1,0,0,0,864,865,
	7,13,0,0,865,866,7,16,0,0,866,867,7,4,0,0,867,868,7,8,0,0,868,869,7,1,0,
	0,869,877,7,7,0,0,870,871,7,11,0,0,871,872,7,0,0,0,872,873,7,2,0,0,873,
	874,7,6,0,0,874,875,7,1,0,0,875,877,7,0,0,0,876,864,1,0,0,0,876,870,1,0,
	0,0,877,172,1,0,0,0,878,879,7,8,0,0,879,880,7,20,0,0,880,881,7,21,0,0,881,
	882,7,10,0,0,882,883,7,6,0,0,883,884,7,20,0,0,884,885,7,6,0,0,885,886,7,
	1,0,0,886,887,7,16,0,0,887,888,7,0,0,0,888,889,7,16,0,0,889,890,7,8,0,0,
	890,891,7,9,0,0,891,892,7,1,0,0,892,174,1,0,0,0,893,894,7,16,0,0,894,895,
	7,4,0,0,895,896,7,15,0,0,896,907,7,6,0,0,897,898,7,18,0,0,898,899,7,6,0,
	0,899,900,7,4,0,0,900,901,7,2,0,0,901,902,7,0,0,0,902,903,7,2,0,0,903,904,
	7,6,0,0,904,905,7,4,0,0,905,907,7,9,0,0,906,893,1,0,0,0,906,897,1,0,0,0,
	907,176,1,0,0,0,908,909,7,14,0,0,909,910,7,0,0,0,910,911,7,10,0,0,911,912,
	7,13,0,0,912,919,7,6,0,0,913,914,7,14,0,0,914,915,7,0,0,0,915,916,7,10,
	0,0,916,917,7,13,0,0,917,919,7,9,0,0,918,908,1,0,0,0,918,913,1,0,0,0,919,
	178,1,0,0,0,920,921,7,19,0,0,921,922,7,4,0,0,922,923,7,8,0,0,923,924,7,
	16,0,0,924,941,7,6,0,0,925,926,7,6,0,0,926,927,7,13,0,0,927,928,7,11,0,
	0,928,929,7,4,0,0,929,930,7,8,0,0,930,931,7,5,0,0,931,932,7,8,0,0,932,941,
	7,4,0,0,933,934,7,20,0,0,934,935,7,9,0,0,935,936,7,13,0,0,936,937,7,16,
	0,0,937,938,7,4,0,0,938,939,7,0,0,0,939,941,7,4,0,0,940,920,1,0,0,0,940,
	925,1,0,0,0,940,933,1,0,0,0,941,180,1,0,0,0,942,943,7,4,0,0,943,944,7,6,
	0,0,944,945,7,0,0,0,945,951,7,2,0,0,946,947,7,10,0,0,947,948,7,6,0,0,948,
	949,7,6,0,0,949,951,7,4,0,0,950,942,1,0,0,0,950,946,1,0,0,0,951,182,1,0,
	0,0,952,953,7,24,0,0,953,954,1,0,0,0,954,955,6,91,0,0,955,184,1,0,0,0,956,
	957,5,47,0,0,957,958,5,47,0,0,958,962,1,0,0,0,959,961,8,25,0,0,960,959,
	1,0,0,0,961,964,1,0,0,0,962,960,1,0,0,0,962,963,1,0,0,0,963,965,1,0,0,0,
	964,962,1,0,0,0,965,966,6,92,0,0,966,186,1,0,0,0,967,971,5,35,0,0,968,970,
	8,25,0,0,969,968,1,0,0,0,970,973,1,0,0,0,971,969,1,0,0,0,971,972,1,0,0,
	0,972,974,1,0,0,0,973,971,1,0,0,0,974,975,6,93,0,0,975,188,1,0,0,0,976,
	980,7,26,0,0,977,979,7,27,0,0,978,977,1,0,0,0,979,982,1,0,0,0,980,978,1,
	0,0,0,980,981,1,0,0,0,981,190,1,0,0,0,982,980,1,0,0,0,983,989,5,39,0,0,
	984,985,5,39,0,0,985,988,5,39,0,0,986,988,8,28,0,0,987,984,1,0,0,0,987,
	986,1,0,0,0,988,991,1,0,0,0,989,987,1,0,0,0,989,990,1,0,0,0,990,992,1,0,
	0,0,991,989,1,0,0,0,992,1004,5,39,0,0,993,999,5,34,0,0,994,995,5,34,0,0,
	995,998,5,34,0,0,996,998,8,29,0,0,997,994,1,0,0,0,997,996,1,0,0,0,998,1001,
	1,0,0,0,999,997,1,0,0,0,999,1000,1,0,0,0,1000,1002,1,0,0,0,1001,999,1,0,
	0,0,1002,1004,5,34,0,0,1003,983,1,0,0,0,1003,993,1,0,0,0,1004,192,1,0,0,
	0,1005,1007,2,48,57,0,1006,1005,1,0,0,0,1007,1008,1,0,0,0,1008,1006,1,0,
	0,0,1008,1009,1,0,0,0,1009,194,1,0,0,0,1010,1012,2,48,57,0,1011,1010,1,
	0,0,0,1012,1013,1,0,0,0,1013,1011,1,0,0,0,1013,1014,1,0,0,0,1014,1027,1,
	0,0,0,1015,1017,5,46,0,0,1016,1018,2,48,57,0,1017,1016,1,0,0,0,1018,1019,
	1,0,0,0,1019,1017,1,0,0,0,1019,1020,1,0,0,0,1020,1022,1,0,0,0,1021,1023,
	3,197,98,0,1022,1021,1,0,0,0,1022,1023,1,0,0,0,1023,1025,1,0,0,0,1024,1015,
	1,0,0,0,1024,1025,1,0,0,0,1025,1028,1,0,0,0,1026,1028,3,197,98,0,1027,1024,
	1,0,0,0,1027,1026,1,0,0,0,1028,196,1,0,0,0,1029,1031,7,6,0,0,1030,1032,
	7,30,0,0,1031,1030,1,0,0,0,1031,1032,1,0,0,0,1032,1034,1,0,0,0,1033,1035,
	2,48,57,0,1034,1033,1,0,0,0,1035,1036,1,0,0,0,1036,1034,1,0,0,0,1036,1037,
	1,0,0,0,1037,198,1,0,0,0,55,0,203,237,254,265,279,316,326,349,377,392,401,
	427,433,451,482,496,538,572,585,604,620,647,665,681,690,707,728,756,770,
	781,796,803,808,876,906,918,940,950,962,971,980,987,989,997,999,1003,1008,
	1013,1019,1022,1024,1027,1031,1036,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!StepCodeLexer.__ATN) {
			StepCodeLexer.__ATN = new ATNDeserializer().deserialize(StepCodeLexer._serializedATN);
		}

		return StepCodeLexer.__ATN;
	}


	static DecisionsToDFA = StepCodeLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}